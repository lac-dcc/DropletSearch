{"parameters": {"input_shape": [128, 336, 21, 21], "filter_shape": [336, 1, 3, 3], "output_shape": [128, 336, 21, 21], "window_movement_strides": [1, 1], "padding_below_diff": [1, 1], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_336_21_21___3_3_336_1___128_336_21_21_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_336_21_21___3_3_336_1___128_336_21_21_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[322];\n  __shared__ float compute_shared[9];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  if ((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 23)) < 23) {\n    PaddedInput_shared[(((int)threadIdx.x))] = (((((1 <= (((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 23))) && ((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 23)) < 22)) && (1 <= (((int)threadIdx.x) % 23))) && ((((int)threadIdx.x) % 23) < 22)) ? data[(((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + ((((int)threadIdx.x) / 23) * 21)) + (((int)threadIdx.x) % 23)) - 22))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 34) {\n    if ((((((int)blockIdx.x) & 1) * 12) + ((((int)threadIdx.x) + 288) / 23)) < 23) {\n      PaddedInput_shared[((((int)threadIdx.x) + 288))] = (((((((((int)blockIdx.x) & 1) * 12) + ((((int)threadIdx.x) + 288) / 23)) < 22) && (1 <= ((((int)threadIdx.x) + 12) % 23))) && (((((int)threadIdx.x) + 12) % 23) < 22)) ? data[(((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + (((((int)threadIdx.x) + 288) / 23) * 21)) + ((((int)threadIdx.x) + 12) % 23)) - 22))] : 0.000000e+00f);\n    }\n  }\n  if (((int)threadIdx.x) < 9) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 672) >> 1) * 9) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 9; ++k_inner_outer) {\n    if (((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 24)) + (k_inner_outer / 3)) < 23) {\n      if (((((int)threadIdx.x) % 24) + (k_inner_outer % 3)) < 23) {\n        PaddedInput_shared_local[(0)] = PaddedInput_shared[((((((((int)threadIdx.x) / 24) * 23) + ((k_inner_outer / 3) * 23)) + (((int)threadIdx.x) % 24)) + (k_inner_outer % 3)))];\n      }\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    if ((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 24)) < 21) {\n      if ((((int)threadIdx.x) % 24) < 21) {\n        DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n      }\n    }\n  }\n  if ((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 24)) < 21) {\n    if ((((int)threadIdx.x) % 24) < 21) {\n      compute[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + ((((int)threadIdx.x) / 24) * 21)) + (((int)threadIdx.x) % 24)))] = DepthwiseConv2d_local[(0)];\n    }\n  }\n}\n", "gridDim": [86016, 1, 1], "blockDim": [288, 1, 1]}