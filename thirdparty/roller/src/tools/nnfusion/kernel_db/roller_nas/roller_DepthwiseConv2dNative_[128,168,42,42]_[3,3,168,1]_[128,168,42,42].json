{"parameters": {"input_shape": [128, 168, 42, 42], "filter_shape": [168, 1, 3, 3], "output_shape": [128, 168, 42, 42], "window_movement_strides": [1, 1], "padding_below_diff": [1, 1], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_168_42_42___3_3_168_1___128_168_42_42_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_168_42_42___3_3_168_1___128_168_42_42_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[2];\n  __shared__ float PaddedInput_shared[704];\n  __shared__ float compute_shared[9];\n  float PaddedInput_shared_local[2];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  DepthwiseConv2d_local[(1)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = ((((1 <= (((((int)blockIdx.x) % 7) * 6) + (((int)threadIdx.x) / 44))) && (1 <= (((int)threadIdx.x) % 44))) && ((((int)threadIdx.x) % 44) < 43)) ? data[(((((((((int)blockIdx.x) / 1176) * 592704) + ((((int)blockIdx.x) % 1176) * 252)) + ((((int)threadIdx.x) / 44) * 42)) + (((int)threadIdx.x) % 44)) - 43))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 288))] = (((((1 <= (((((int)blockIdx.x) % 7) * 6) + (((((int)threadIdx.x) + 288) % 352) / 44))) && ((((((int)blockIdx.x) % 7) * 6) + (((((int)threadIdx.x) + 288) % 352) / 44)) < 43)) && (1 <= ((((int)threadIdx.x) + 24) % 44))) && (((((int)threadIdx.x) + 24) % 44) < 43)) ? data[((((((((((int)blockIdx.x) / 1176) * 592704) + (((((int)threadIdx.x) + 288) / 352) * 296352)) + ((((int)blockIdx.x) % 1176) * 252)) + ((((((int)threadIdx.x) + 288) % 352) / 44) * 42)) + ((((int)threadIdx.x) + 24) % 44)) - 43))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 128) {\n    PaddedInput_shared[((((int)threadIdx.x) + 576))] = (((((((((int)blockIdx.x) % 7) * 6) + ((((int)threadIdx.x) + 224) / 44)) < 43) && (1 <= ((((int)threadIdx.x) + 4) % 44))) && (((((int)threadIdx.x) + 4) % 44) < 43)) ? data[((((((((((int)blockIdx.x) / 1176) * 592704) + (((((int)threadIdx.x) + 576) / 352) * 296352)) + ((((int)blockIdx.x) % 1176) * 252)) + (((((int)threadIdx.x) + 224) / 44) * 42)) + ((((int)threadIdx.x) + 4) % 44)) - 43))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 9) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 1176) / 7) * 9) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 9; ++k_inner_outer) {\n    PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((((((int)threadIdx.x) / 144) * 352) + (((((int)threadIdx.x) % 144) / 24) * 44)) + ((k_inner_outer / 3) * 44)) + (((int)threadIdx.x) % 24)) + (k_inner_outer % 3)))];\n    if (((((int)threadIdx.x) % 24) + (k_inner_outer % 3)) < 20) {\n      PaddedInput_shared_local[(1)] = PaddedInput_shared[((((((((((int)threadIdx.x) / 144) * 352) + (((((int)threadIdx.x) % 144) / 24) * 44)) + ((k_inner_outer / 3) * 44)) + (((int)threadIdx.x) % 24)) + (k_inner_outer % 3)) + 24))];\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    if ((((int)threadIdx.x) % 24) < 18) {\n      DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(1)] * compute_shared_local[(0)]));\n    }\n  }\n  compute[(((((((((int)blockIdx.x) / 1176) * 592704) + ((((int)threadIdx.x) / 144) * 296352)) + ((((int)blockIdx.x) % 1176) * 252)) + (((((int)threadIdx.x) % 144) / 24) * 42)) + (((int)threadIdx.x) % 24)))] = DepthwiseConv2d_local[(0)];\n  if ((((int)threadIdx.x) % 24) < 18) {\n    compute[((((((((((int)blockIdx.x) / 1176) * 592704) + ((((int)threadIdx.x) / 144) * 296352)) + ((((int)blockIdx.x) % 1176) * 252)) + (((((int)threadIdx.x) % 144) / 24) * 42)) + (((int)threadIdx.x) % 24)) + 24))] = DepthwiseConv2d_local[(1)];\n  }\n}\n", "gridDim": [75264, 1, 1], "blockDim": [288, 1, 1]}