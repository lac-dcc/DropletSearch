{"parameters": {"input_shape": [128, 42, 165, 165], "output_shape": [128, 42, 83, 83], "window_shape": [3, 3], "window_stride": [2, 2], "padding_below": [1, 1]}, "op_type": "AvgPool", "tvm_func_name": "roller_AvgPool__128_42_165_165___128_42_83_83_", "code": "extern \"C\" __global__ void roller_AvgPool__128_42_165_165___128_42_83_83_(float* __restrict__ Pool2d, float* __restrict__ data) {\n  __shared__ float compute_shared[1503];\n  if ((((((int)blockIdx.x) % 21) * 4) + (((int)threadIdx.x) / 96)) < 83) {\n    if ((((int)threadIdx.x) % 96) < 83) {\n      Pool2d[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + ((((int)threadIdx.x) / 96) * 83)) + (((int)threadIdx.x) % 96)))] = 0.000000e+00f;\n    }\n  }\n  compute_shared[(((int)threadIdx.x))] = ((((1 <= (((((int)blockIdx.x) % 21) * 8) + (((int)threadIdx.x) / 167))) && (1 <= (((int)threadIdx.x) % 167))) && ((((int)threadIdx.x) % 167) < 166)) ? data[((((((((int)blockIdx.x) / 21) * 27225) + ((((int)blockIdx.x) % 21) * 1320)) + ((((int)threadIdx.x) / 167) * 165)) + (((int)threadIdx.x) % 167)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 384))] = (((1 <= ((((int)threadIdx.x) + 50) % 167)) && (((((int)threadIdx.x) + 50) % 167) < 166)) ? data[((((((((int)blockIdx.x) / 21) * 27225) + ((((int)blockIdx.x) % 21) * 1320)) + (((((int)threadIdx.x) + 384) / 167) * 165)) + ((((int)threadIdx.x) + 50) % 167)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 768))] = (((((((((int)blockIdx.x) % 21) * 8) + ((((int)threadIdx.x) + 768) / 167)) < 166) && (1 <= ((((int)threadIdx.x) + 100) % 167))) && (((((int)threadIdx.x) + 100) % 167) < 166)) ? data[((((((((int)blockIdx.x) / 21) * 27225) + ((((int)blockIdx.x) % 21) * 1320)) + (((((int)threadIdx.x) + 768) / 167) * 165)) + ((((int)threadIdx.x) + 100) % 167)))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 351) {\n    if ((((((int)blockIdx.x) % 21) * 8) + ((((int)threadIdx.x) + 1152) / 167)) < 167) {\n      compute_shared[((((int)threadIdx.x) + 1152))] = (((((((((int)blockIdx.x) % 21) * 8) + ((((int)threadIdx.x) + 1152) / 167)) < 166) && (1 <= ((((int)threadIdx.x) + 150) % 167))) && (((((int)threadIdx.x) + 150) % 167) < 166)) ? data[((((((((int)blockIdx.x) / 21) * 27225) + ((((int)blockIdx.x) % 21) * 1320)) + (((((int)threadIdx.x) + 1152) / 167) * 165)) + ((((int)threadIdx.x) + 150) % 167)))] : 0.000000e+00f);\n    }\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 9; ++k_inner_outer) {\n    if ((((((int)blockIdx.x) % 21) * 4) + (((int)threadIdx.x) / 96)) < 83) {\n      if ((((int)threadIdx.x) % 96) < 83) {\n        Pool2d[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + ((((int)threadIdx.x) / 96) * 83)) + (((int)threadIdx.x) % 96)))] = (Pool2d[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + ((((int)threadIdx.x) / 96) * 83)) + (((int)threadIdx.x) % 96)))] + (compute_shared[((((((((int)threadIdx.x) / 96) * 334) + ((k_inner_outer / 3) * 167)) + ((((int)threadIdx.x) % 96) * 2)) + (k_inner_outer % 3)))] * 1.111111e-01f));\n      }\n    }\n  }\n}\n", "gridDim": [112896, 1, 1], "blockDim": [384, 1, 1]}