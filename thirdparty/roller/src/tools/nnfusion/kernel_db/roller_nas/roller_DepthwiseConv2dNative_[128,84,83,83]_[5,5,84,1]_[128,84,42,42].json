{"parameters": {"input_shape": [128, 84, 83, 83], "filter_shape": [84, 1, 5, 5], "output_shape": [128, 84, 42, 42], "window_movement_strides": [2, 2], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_84_83_83___5_5_84_1___128_84_42_42_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_84_83_83___5_5_84_1___128_84_42_42_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[1305];\n  __shared__ float compute_shared[25];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = ((((2 <= (((((int)blockIdx.x) % 7) * 12) + (((int)threadIdx.x) / 87))) && (2 <= (((int)threadIdx.x) % 87))) && ((((int)threadIdx.x) % 87) < 85)) ? data[(((((((((int)blockIdx.x) / 7) * 6889) + ((((int)blockIdx.x) % 7) * 996)) + ((((int)threadIdx.x) / 87) * 83)) + (((int)threadIdx.x) % 87)) - 168))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 288))] = (((2 <= ((((int)threadIdx.x) + 27) % 87)) && (((((int)threadIdx.x) + 27) % 87) < 85)) ? data[(((((((((int)blockIdx.x) / 7) * 6889) + ((((int)blockIdx.x) % 7) * 996)) + (((((int)threadIdx.x) + 288) / 87) * 83)) + ((((int)threadIdx.x) + 27) % 87)) - 168))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 576))] = (((2 <= ((((int)threadIdx.x) + 54) % 87)) && (((((int)threadIdx.x) + 54) % 87) < 85)) ? data[(((((((((int)blockIdx.x) / 7) * 6889) + ((((int)blockIdx.x) % 7) * 996)) + (((((int)threadIdx.x) + 576) / 87) * 83)) + ((((int)threadIdx.x) + 54) % 87)) - 168))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 864))] = (((((((((int)blockIdx.x) % 7) * 12) + ((((int)threadIdx.x) + 864) / 87)) < 85) && (2 <= ((((int)threadIdx.x) + 81) % 87))) && (((((int)threadIdx.x) + 81) % 87) < 85)) ? data[(((((((((int)blockIdx.x) / 7) * 6889) + ((((int)blockIdx.x) % 7) * 996)) + (((((int)threadIdx.x) + 864) / 87) * 83)) + ((((int)threadIdx.x) + 81) % 87)) - 168))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 153) {\n    PaddedInput_shared[((((int)threadIdx.x) + 1152))] = (((((((((int)blockIdx.x) % 7) * 12) + ((((int)threadIdx.x) + 1152) / 87)) < 85) && (2 <= ((((int)threadIdx.x) + 21) % 87))) && (((((int)threadIdx.x) + 21) % 87) < 85)) ? data[(((((((((int)blockIdx.x) / 7) * 6889) + ((((int)blockIdx.x) % 7) * 996)) + (((((int)threadIdx.x) + 1152) / 87) * 83)) + ((((int)threadIdx.x) + 21) % 87)) - 168))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 25) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 588) / 7) * 25) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 25; ++k_inner_outer) {\n    if ((((((int)threadIdx.x) % 48) * 2) + (k_inner_outer % 5)) < 87) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[((((((((int)threadIdx.x) / 48) * 174) + ((k_inner_outer / 5) * 87)) + ((((int)threadIdx.x) % 48) * 2)) + (k_inner_outer % 5)))];\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    if ((((int)threadIdx.x) % 48) < 42) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    }\n  }\n  if ((((int)threadIdx.x) % 48) < 42) {\n    compute[((((((int)blockIdx.x) * 252) + ((((int)threadIdx.x) / 48) * 42)) + (((int)threadIdx.x) % 48)))] = DepthwiseConv2d_local[(0)];\n  }\n}\n", "gridDim": [75264, 1, 1], "blockDim": [288, 1, 1]}