{"parameters": {"input_shape": [128, 336, 47, 47], "filter_shape": [336, 1, 7, 7], "output_shape": [128, 336, 21, 21], "window_movement_strides": [2, 2], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_336_47_47___7_7_336_1___128_336_21_21_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_336_47_47___7_7_336_1___128_336_21_21_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[1316];\n  __shared__ float compute_shared[196];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = data[(((((((int)blockIdx.x) / 21) * 8836) + ((((int)blockIdx.x) % 21) * 94)) + ((int)threadIdx.x)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 96))] = data[((((((((int)blockIdx.x) / 21) * 8836) + ((((int)blockIdx.x) % 21) * 94)) + ((int)threadIdx.x)) + 96))];\n  PaddedInput_shared[((((int)threadIdx.x) + 192))] = data[((((((((int)blockIdx.x) / 21) * 8836) + ((((int)blockIdx.x) % 21) * 94)) + ((int)threadIdx.x)) + 192))];\n  PaddedInput_shared[((((int)threadIdx.x) + 288))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 288) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + ((((int)threadIdx.x) + 288) % 329)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 384))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 384) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 55)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 480))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 480) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 151)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 576))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 576) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + ((((int)threadIdx.x) + 247) % 329)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 672))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 672) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 14)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 768))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 768) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 110)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 864))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 864) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 206)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 960))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 960) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + ((((int)threadIdx.x) + 302) % 329)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 1056))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 1056) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 69)))];\n  PaddedInput_shared[((((int)threadIdx.x) + 1152))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 1152) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 165)))];\n  if (((int)threadIdx.x) < 68) {\n    PaddedInput_shared[((((int)threadIdx.x) + 1248))] = data[((((((((int)blockIdx.x) / 21) * 8836) + (((((int)threadIdx.x) + 1248) / 329) * 2209)) + ((((int)blockIdx.x) % 21) * 94)) + (((int)threadIdx.x) + 261)))];\n  }\n  compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 1764) / 21) * 196) + ((int)threadIdx.x)))];\n  compute_shared[((((int)threadIdx.x) + 96))] = kernel[((((((((int)blockIdx.x) % 1764) / 21) * 196) + ((int)threadIdx.x)) + 96))];\n  if (((int)threadIdx.x) < 4) {\n    compute_shared[((((int)threadIdx.x) + 192))] = kernel[((((((((int)blockIdx.x) % 1764) / 21) * 196) + ((int)threadIdx.x)) + 192))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 49; ++k_inner_outer) {\n    if ((((((int)threadIdx.x) % 24) * 2) + (k_inner_outer % 7)) < 47) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[((((((((int)threadIdx.x) / 24) * 329) + ((k_inner_outer / 7) * 47)) + ((((int)threadIdx.x) % 24) * 2)) + (k_inner_outer % 7)))];\n    }\n    compute_shared_local[(0)] = compute_shared[((((((int)threadIdx.x) / 24) * 49) + k_inner_outer))];\n    if ((((int)threadIdx.x) % 24) < 21) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    }\n  }\n  if ((((int)threadIdx.x) % 24) < 21) {\n    compute[((((((((int)blockIdx.x) / 21) * 1764) + ((((int)threadIdx.x) / 24) * 441)) + ((((int)blockIdx.x) % 21) * 21)) + (((int)threadIdx.x) % 24)))] = DepthwiseConv2d_local[(0)];\n  }\n}\n", "gridDim": [225792, 1, 1], "blockDim": [96, 1, 1]}