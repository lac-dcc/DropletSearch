{"parameters": {"input_shape": [128, 672, 11, 11], "filter_shape": [672, 1, 5, 5], "output_shape": [128, 672, 11, 11], "window_movement_strides": [1, 1], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_672_11_11___5_5_672_1___128_672_11_11_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_672_11_11___5_5_672_1___128_672_11_11_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[450];\n  __shared__ float compute_shared[25];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = (((((30 <= (((int)threadIdx.x) % 225)) && ((((int)threadIdx.x) % 225) < 195)) && (2 <= (((int)threadIdx.x) % 15))) && ((((int)threadIdx.x) % 15) < 13)) ? data[((((((((((int)blockIdx.x) / 672) * 162624) + ((((int)threadIdx.x) / 225) * 81312)) + ((((int)blockIdx.x) % 672) * 121)) + (((((int)threadIdx.x) % 225) / 15) * 11)) + (((int)threadIdx.x) % 15)) - 24))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 98) {\n    PaddedInput_shared[((((int)threadIdx.x) + 352))] = ((((((int)threadIdx.x) < 68) && (2 <= ((((int)threadIdx.x) + 7) % 15))) && (((((int)threadIdx.x) + 7) % 15) < 13)) ? data[((((((((((int)blockIdx.x) / 672) * 162624) + (((((int)threadIdx.x) + 352) / 225) * 81312)) + ((((int)blockIdx.x) % 672) * 121)) + (((((int)threadIdx.x) + 127) / 15) * 11)) + ((((int)threadIdx.x) + 7) % 15)) - 24))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 25) {\n    compute_shared[(((int)threadIdx.x))] = kernel[((((((int)blockIdx.x) % 672) * 25) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 25; ++k_inner_outer) {\n    if (((((int)threadIdx.x) & 15) + (k_inner_outer % 5)) < 15) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((((((int)threadIdx.x) / 176) * 225) + (((((int)threadIdx.x) % 176) >> 4) * 15)) + ((k_inner_outer / 5) * 15)) + (((int)threadIdx.x) & 15)) + (k_inner_outer % 5)))];\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    if ((((int)threadIdx.x) & 15) < 11) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    }\n  }\n  if ((((int)threadIdx.x) & 15) < 11) {\n    compute[(((((((((int)blockIdx.x) / 672) * 162624) + ((((int)threadIdx.x) / 176) * 81312)) + ((((int)blockIdx.x) % 672) * 121)) + (((((int)threadIdx.x) % 176) >> 4) * 11)) + (((int)threadIdx.x) & 15)))] = DepthwiseConv2d_local[(0)];\n  }\n}\n", "gridDim": [43008, 1, 1], "blockDim": [352, 1, 1]}