{"parameters": {"input_shape": [128, 336, 42, 42], "output_shape": [128, 336, 21, 21], "window_shape": [3, 3], "window_stride": [2, 2], "padding_below": [0, 0]}, "op_type": "AvgPool", "tvm_func_name": "roller_AvgPool__128_336_42_42___128_336_21_21_", "code": "extern \"C\" __global__ void roller_AvgPool__128_336_42_42___128_336_21_21_(float* __restrict__ Pool2d, float* __restrict__ data) {\n  __shared__ float compute_shared[1075];\n  if ((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 24)) < 21) {\n    if ((((int)threadIdx.x) % 24) < 21) {\n      Pool2d[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + ((((int)threadIdx.x) / 24) * 21)) + (((int)threadIdx.x) % 24)))] = 0.000000e+00f;\n    }\n  }\n  compute_shared[(((int)threadIdx.x))] = (((1 <= (((((int)blockIdx.x) & 1) * 24) + (((int)threadIdx.x) / 43))) && (1 <= (((int)threadIdx.x) % 43))) ? data[((((((((int)blockIdx.x) >> 1) * 1764) + ((((int)blockIdx.x) & 1) * 1008)) + ((((int)threadIdx.x) / 43) * 42)) + (((int)threadIdx.x) % 43)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 288))] = ((1 <= ((((int)threadIdx.x) + 30) % 43)) ? data[((((((((int)blockIdx.x) >> 1) * 1764) + ((((int)blockIdx.x) & 1) * 1008)) + (((((int)threadIdx.x) + 288) / 43) * 42)) + ((((int)threadIdx.x) + 30) % 43)))] : 0.000000e+00f);\n  if ((((((int)blockIdx.x) & 1) * 24) + ((((int)threadIdx.x) + 576) / 43)) < 44) {\n    compute_shared[((((int)threadIdx.x) + 576))] = ((((((((int)blockIdx.x) & 1) * 24) + ((((int)threadIdx.x) + 576) / 43)) < 43) && (1 <= ((((int)threadIdx.x) + 17) % 43))) ? data[((((((((int)blockIdx.x) >> 1) * 1764) + ((((int)blockIdx.x) & 1) * 1008)) + (((((int)threadIdx.x) + 576) / 43) * 42)) + ((((int)threadIdx.x) + 17) % 43)))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 211) {\n    if ((((((int)blockIdx.x) & 1) * 24) + ((((int)threadIdx.x) + 864) / 43)) < 44) {\n      compute_shared[((((int)threadIdx.x) + 864))] = ((((((((int)blockIdx.x) & 1) * 24) + ((((int)threadIdx.x) + 864) / 43)) < 43) && (1 <= ((((int)threadIdx.x) + 4) % 43))) ? data[((((((((int)blockIdx.x) >> 1) * 1764) + ((((int)blockIdx.x) & 1) * 1008)) + (((((int)threadIdx.x) + 864) / 43) * 42)) + ((((int)threadIdx.x) + 4) % 43)))] : 0.000000e+00f);\n    }\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 9; ++k_inner_outer) {\n    if ((((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 24)) < 21) {\n      if ((((int)threadIdx.x) % 24) < 21) {\n        Pool2d[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + ((((int)threadIdx.x) / 24) * 21)) + (((int)threadIdx.x) % 24)))] = (Pool2d[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + ((((int)threadIdx.x) / 24) * 21)) + (((int)threadIdx.x) % 24)))] + (compute_shared[((((((((int)threadIdx.x) / 24) * 86) + ((k_inner_outer / 3) * 43)) + ((((int)threadIdx.x) % 24) * 2)) + (k_inner_outer % 3)))] * 1.111111e-01f));\n      }\n    }\n  }\n}\n", "gridDim": [86016, 1, 1], "blockDim": [288, 1, 1]}