{"parameters": {"input_shape": [128, 42, 165, 165], "filter_shape": [42, 1, 5, 5], "output_shape": [128, 42, 83, 83], "window_movement_strides": [2, 2], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_42_165_165___5_5_42_1___128_42_83_83_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_42_165_165___5_5_42_1___128_42_83_83_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[2];\n  __shared__ float PaddedInput_shared[3211];\n  __shared__ float compute_shared[25];\n  float PaddedInput_shared_local[2];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  DepthwiseConv2d_local[(1)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = ((((2 <= (((((int)blockIdx.x) % 11) * 16) + (((int)threadIdx.x) / 169))) && (2 <= (((int)threadIdx.x) % 169))) && ((((int)threadIdx.x) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + ((((int)threadIdx.x) / 169) * 165)) + (((int)threadIdx.x) % 169)) - 332))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 352))] = (((2 <= ((((int)threadIdx.x) + 14) % 169)) && (((((int)threadIdx.x) + 14) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 352) / 169) * 165)) + ((((int)threadIdx.x) + 14) % 169)) - 332))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 704))] = (((2 <= ((((int)threadIdx.x) + 28) % 169)) && (((((int)threadIdx.x) + 28) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 704) / 169) * 165)) + ((((int)threadIdx.x) + 28) % 169)) - 332))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 1056))] = (((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 1056) / 169)) < 167) && (2 <= ((((int)threadIdx.x) + 42) % 169))) && (((((int)threadIdx.x) + 42) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 1056) / 169) * 165)) + ((((int)threadIdx.x) + 42) % 169)) - 332))] : 0.000000e+00f);\n  if ((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 1408) / 169)) < 169) {\n    PaddedInput_shared[((((int)threadIdx.x) + 1408))] = (((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 1408) / 169)) < 167) && (2 <= ((((int)threadIdx.x) + 56) % 169))) && (((((int)threadIdx.x) + 56) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 1408) / 169) * 165)) + ((((int)threadIdx.x) + 56) % 169)) - 332))] : 0.000000e+00f);\n  }\n  if ((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 1760) / 169)) < 169) {\n    PaddedInput_shared[((((int)threadIdx.x) + 1760))] = (((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 1760) / 169)) < 167) && (2 <= ((((int)threadIdx.x) + 70) % 169))) && (((((int)threadIdx.x) + 70) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 1760) / 169) * 165)) + ((((int)threadIdx.x) + 70) % 169)) - 332))] : 0.000000e+00f);\n  }\n  if ((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 2112) / 169)) < 169) {\n    PaddedInput_shared[((((int)threadIdx.x) + 2112))] = (((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 2112) / 169)) < 167) && (2 <= ((((int)threadIdx.x) + 84) % 169))) && (((((int)threadIdx.x) + 84) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 2112) / 169) * 165)) + ((((int)threadIdx.x) + 84) % 169)) - 332))] : 0.000000e+00f);\n  }\n  if ((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 2464) / 169)) < 169) {\n    PaddedInput_shared[((((int)threadIdx.x) + 2464))] = (((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 2464) / 169)) < 167) && (2 <= ((((int)threadIdx.x) + 98) % 169))) && (((((int)threadIdx.x) + 98) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 2464) / 169) * 165)) + ((((int)threadIdx.x) + 98) % 169)) - 332))] : 0.000000e+00f);\n  }\n  if ((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 2816) / 169)) < 169) {\n    PaddedInput_shared[((((int)threadIdx.x) + 2816))] = (((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 2816) / 169)) < 167) && (2 <= ((((int)threadIdx.x) + 112) % 169))) && (((((int)threadIdx.x) + 112) % 169) < 167)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 2816) / 169) * 165)) + ((((int)threadIdx.x) + 112) % 169)) - 332))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 43) {\n    if ((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 3168) / 169)) < 169) {\n      PaddedInput_shared[((((int)threadIdx.x) + 3168))] = ((((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) + 3168) / 169)) < 167) && (((int)threadIdx.x) < 41)) ? data[(((((((((int)blockIdx.x) / 11) * 27225) + ((((int)blockIdx.x) % 11) * 2640)) + (((((int)threadIdx.x) + 3168) / 169) * 165)) + (((int)threadIdx.x) + 126)) - 332))] : 0.000000e+00f);\n    }\n  }\n  if (((int)threadIdx.x) < 25) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 462) / 11) * 25) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 25; ++k_inner_outer) {\n    if (((((((int)blockIdx.x) % 11) * 16) + ((((int)threadIdx.x) / 44) * 2)) + (k_inner_outer / 5)) < 169) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[((((((((int)threadIdx.x) / 44) * 338) + ((k_inner_outer / 5) * 169)) + ((((int)threadIdx.x) % 44) * 2)) + (k_inner_outer % 5)))];\n      if ((((((int)threadIdx.x) % 44) * 2) + (k_inner_outer % 5)) < 81) {\n        PaddedInput_shared_local[(1)] = PaddedInput_shared[(((((((((int)threadIdx.x) / 44) * 338) + ((k_inner_outer / 5) * 169)) + ((((int)threadIdx.x) % 44) * 2)) + (k_inner_outer % 5)) + 88))];\n      }\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    if ((((((int)blockIdx.x) % 11) * 8) + (((int)threadIdx.x) / 44)) < 83) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n      if ((((int)threadIdx.x) % 44) < 39) {\n        DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(1)] * compute_shared_local[(0)]));\n      }\n    }\n  }\n  if ((((((int)blockIdx.x) % 11) * 8) + (((int)threadIdx.x) / 44)) < 83) {\n    compute[((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + ((((int)threadIdx.x) / 44) * 83)) + (((int)threadIdx.x) % 44)))] = DepthwiseConv2d_local[(0)];\n    if ((((int)threadIdx.x) % 44) < 39) {\n      compute[(((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + ((((int)threadIdx.x) / 44) * 83)) + (((int)threadIdx.x) % 44)) + 44))] = DepthwiseConv2d_local[(1)];\n    }\n  }\n}\n", "gridDim": [59136, 1, 1], "blockDim": [352, 1, 1]}