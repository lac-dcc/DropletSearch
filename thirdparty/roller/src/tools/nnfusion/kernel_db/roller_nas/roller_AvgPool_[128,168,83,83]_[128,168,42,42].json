{"parameters": {"input_shape": [128, 168, 83, 83], "output_shape": [128, 168, 42, 42], "window_shape": [1, 1], "window_stride": [2, 2], "padding_below": [0, 0]}, "op_type": "AvgPool", "tvm_func_name": "roller_AvgPool__128_168_83_83___128_168_42_42_", "code": "extern \"C\" __global__ void roller_AvgPool__128_168_83_83___128_168_42_42_(float* __restrict__ Pool2d, float* __restrict__ data) {\n  __shared__ float compute_shared[664];\n  Pool2d[((((((((int)blockIdx.x) / 42) * 14112) + ((((int)threadIdx.x) / 24) * 1764)) + ((((int)blockIdx.x) % 42) * 42)) + (((int)threadIdx.x) % 24)))] = 0.000000e+00f;\n  if ((((int)threadIdx.x) % 24) < 18) {\n    Pool2d[(((((((((int)blockIdx.x) / 42) * 14112) + ((((int)threadIdx.x) / 24) * 1764)) + ((((int)blockIdx.x) % 42) * 42)) + (((int)threadIdx.x) % 24)) + 24))] = 0.000000e+00f;\n  }\n  compute_shared[(((int)threadIdx.x))] = data[((((((((int)blockIdx.x) / 42) * 55112) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 42) * 166)) + (((int)threadIdx.x) % 83)))];\n  compute_shared[((((int)threadIdx.x) + 192))] = data[((((((((int)blockIdx.x) / 42) * 55112) + (((((int)threadIdx.x) + 192) / 83) * 6889)) + ((((int)blockIdx.x) % 42) * 166)) + ((((int)threadIdx.x) + 26) % 83)))];\n  compute_shared[((((int)threadIdx.x) + 384))] = data[((((((((int)blockIdx.x) / 42) * 55112) + (((((int)threadIdx.x) + 384) / 83) * 6889)) + ((((int)blockIdx.x) % 42) * 166)) + ((((int)threadIdx.x) + 52) % 83)))];\n  if (((int)threadIdx.x) < 88) {\n    compute_shared[((((int)threadIdx.x) + 576))] = data[((((((((int)blockIdx.x) / 42) * 55112) + (((((int)threadIdx.x) + 576) / 83) * 6889)) + ((((int)blockIdx.x) % 42) * 166)) + ((((int)threadIdx.x) + 78) % 83)))];\n  }\n  __syncthreads();\n  Pool2d[((((((((int)blockIdx.x) / 42) * 14112) + ((((int)threadIdx.x) / 24) * 1764)) + ((((int)blockIdx.x) % 42) * 42)) + (((int)threadIdx.x) % 24)))] = (Pool2d[((((((((int)blockIdx.x) / 42) * 14112) + ((((int)threadIdx.x) / 24) * 1764)) + ((((int)blockIdx.x) % 42) * 42)) + (((int)threadIdx.x) % 24)))] + compute_shared[((((((int)threadIdx.x) / 24) * 83) + ((((int)threadIdx.x) % 24) * 2)))]);\n  if ((((int)threadIdx.x) % 24) < 18) {\n    Pool2d[(((((((((int)blockIdx.x) / 42) * 14112) + ((((int)threadIdx.x) / 24) * 1764)) + ((((int)blockIdx.x) % 42) * 42)) + (((int)threadIdx.x) % 24)) + 24))] = (Pool2d[(((((((((int)blockIdx.x) / 42) * 14112) + ((((int)threadIdx.x) / 24) * 1764)) + ((((int)blockIdx.x) % 42) * 42)) + (((int)threadIdx.x) % 24)) + 24))] + compute_shared[(((((((int)threadIdx.x) / 24) * 83) + ((((int)threadIdx.x) % 24) * 2)) + 48))]);\n  }\n}\n", "gridDim": [112896, 1, 1], "blockDim": [192, 1, 1]}