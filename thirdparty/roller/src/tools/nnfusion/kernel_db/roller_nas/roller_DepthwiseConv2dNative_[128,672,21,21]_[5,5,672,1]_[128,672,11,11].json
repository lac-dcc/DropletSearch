{"parameters": {"input_shape": [128, 672, 21, 21], "filter_shape": [672, 1, 5, 5], "output_shape": [128, 672, 11, 11], "window_movement_strides": [2, 2], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_672_21_21___5_5_672_1___128_672_11_11_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_672_21_21___5_5_672_1___128_672_11_11_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[1250];\n  __shared__ float compute_shared[50];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = ((((50 <= ((int)threadIdx.x)) && (2 <= (((int)threadIdx.x) % 25))) && ((((int)threadIdx.x) % 25) < 23)) ? data[(((((((int)blockIdx.x) * 882) + ((((int)threadIdx.x) / 25) * 21)) + (((int)threadIdx.x) % 25)) - 44))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 352))] = (((((50 <= ((((int)threadIdx.x) + 352) % 625)) && (((((int)threadIdx.x) + 352) % 625) < 575)) && (2 <= ((((int)threadIdx.x) + 2) % 25))) && (((((int)threadIdx.x) + 2) % 25) < 23)) ? data[((((((((int)blockIdx.x) * 882) + (((((int)threadIdx.x) + 352) / 625) * 441)) + ((((((int)threadIdx.x) + 352) % 625) / 25) * 21)) + ((((int)threadIdx.x) + 2) % 25)) - 44))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 704))] = (((2 <= ((((int)threadIdx.x) + 4) % 25)) && (((((int)threadIdx.x) + 4) % 25) < 23)) ? data[((((((((int)blockIdx.x) * 882) + (((((int)threadIdx.x) + 704) / 625) * 441)) + (((((int)threadIdx.x) + 79) / 25) * 21)) + ((((int)threadIdx.x) + 4) % 25)) - 44))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 194) {\n    PaddedInput_shared[((((int)threadIdx.x) + 1056))] = ((((((int)threadIdx.x) < 144) && (2 <= ((((int)threadIdx.x) + 6) % 25))) && (((((int)threadIdx.x) + 6) % 25) < 23)) ? data[((((((((int)blockIdx.x) * 882) + (((((int)threadIdx.x) + 1056) / 625) * 441)) + (((((int)threadIdx.x) + 431) / 25) * 21)) + ((((int)threadIdx.x) + 6) % 25)) - 44))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 50) {\n    compute_shared[(((int)threadIdx.x))] = kernel[((((((int)blockIdx.x) % 336) * 50) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 25; ++k_inner_outer) {\n    if ((((((int)threadIdx.x) & 15) * 2) + (k_inner_outer % 5)) < 25) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((((((int)threadIdx.x) / 176) * 625) + (((((int)threadIdx.x) % 176) >> 4) * 50)) + ((k_inner_outer / 5) * 25)) + ((((int)threadIdx.x) & 15) * 2)) + (k_inner_outer % 5)))];\n    }\n    compute_shared_local[(0)] = compute_shared[((((((int)threadIdx.x) / 176) * 25) + k_inner_outer))];\n    if ((((int)threadIdx.x) & 15) < 11) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    }\n  }\n  if ((((int)threadIdx.x) & 15) < 11) {\n    compute[((((((int)blockIdx.x) * 242) + ((((int)threadIdx.x) >> 4) * 11)) + (((int)threadIdx.x) & 15)))] = DepthwiseConv2d_local[(0)];\n  }\n}\n", "gridDim": [43008, 1, 1], "blockDim": [352, 1, 1]}