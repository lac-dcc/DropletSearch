{"parameters": {"input_shape": [128, 168, 42, 42], "filter_shape": [168, 1, 5, 5], "output_shape": [128, 168, 42, 42], "window_movement_strides": [1, 1], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_168_42_42___5_5_168_1___128_168_42_42_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_168_42_42___5_5_168_1___128_168_42_42_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[460];\n  __shared__ float compute_shared[25];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = ((((2 <= (((((int)blockIdx.x) % 7) * 6) + (((int)threadIdx.x) / 46))) && (2 <= (((int)threadIdx.x) % 46))) && ((((int)threadIdx.x) % 46) < 44)) ? data[(((((((int)blockIdx.x) * 252) + ((((int)threadIdx.x) / 46) * 42)) + (((int)threadIdx.x) % 46)) - 86))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 172) {\n    PaddedInput_shared[((((int)threadIdx.x) + 288))] = (((((((((int)blockIdx.x) % 7) * 6) + ((((int)threadIdx.x) + 288) / 46)) < 44) && (2 <= ((((int)threadIdx.x) + 12) % 46))) && (((((int)threadIdx.x) + 12) % 46) < 44)) ? data[(((((((int)blockIdx.x) * 252) + (((((int)threadIdx.x) + 288) / 46) * 42)) + ((((int)threadIdx.x) + 12) % 46)) - 86))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 25) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 1176) / 7) * 25) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 25; ++k_inner_outer) {\n    if (((((int)threadIdx.x) % 48) + (k_inner_outer % 5)) < 46) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[((((((((int)threadIdx.x) / 48) * 46) + ((k_inner_outer / 5) * 46)) + (((int)threadIdx.x) % 48)) + (k_inner_outer % 5)))];\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    if ((((int)threadIdx.x) % 48) < 42) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    }\n  }\n  if ((((int)threadIdx.x) % 48) < 42) {\n    compute[((((((int)blockIdx.x) * 252) + ((((int)threadIdx.x) / 48) * 42)) + (((int)threadIdx.x) % 48)))] = DepthwiseConv2d_local[(0)];\n  }\n}\n", "gridDim": [150528, 1, 1], "blockDim": [288, 1, 1]}