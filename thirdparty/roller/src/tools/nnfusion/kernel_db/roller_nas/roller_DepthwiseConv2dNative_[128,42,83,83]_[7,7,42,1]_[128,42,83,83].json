{"parameters": {"input_shape": [128, 42, 83, 83], "filter_shape": [42, 1, 7, 7], "output_shape": [128, 42, 83, 83], "window_movement_strides": [1, 1], "padding_below_diff": [3, 3], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_42_83_83___7_7_42_1___128_42_83_83_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_42_83_83___7_7_42_1___128_42_83_83_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[2];\n  __shared__ float PaddedInput_shared[1246];\n  __shared__ float compute_shared[49];\n  float PaddedInput_shared_local[2];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  DepthwiseConv2d_local[(1)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = ((((3 <= (((((int)blockIdx.x) % 11) * 8) + (((int)threadIdx.x) / 89))) && (3 <= (((int)threadIdx.x) % 89))) && ((((int)threadIdx.x) % 89) < 86)) ? data[(((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + ((((int)threadIdx.x) / 89) * 83)) + (((int)threadIdx.x) % 89)) - 252))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 352))] = (((((((((int)blockIdx.x) % 11) * 8) + ((((int)threadIdx.x) + 352) / 89)) < 86) && (3 <= ((((int)threadIdx.x) + 85) % 89))) && (((((int)threadIdx.x) + 85) % 89) < 86)) ? data[(((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + (((((int)threadIdx.x) + 352) / 89) * 83)) + ((((int)threadIdx.x) + 85) % 89)) - 252))] : 0.000000e+00f);\n  if ((((((int)blockIdx.x) % 11) * 8) + ((((int)threadIdx.x) + 704) / 89)) < 89) {\n    PaddedInput_shared[((((int)threadIdx.x) + 704))] = (((((((((int)blockIdx.x) % 11) * 8) + ((((int)threadIdx.x) + 704) / 89)) < 86) && (3 <= ((((int)threadIdx.x) + 81) % 89))) && (((((int)threadIdx.x) + 81) % 89) < 86)) ? data[(((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + (((((int)threadIdx.x) + 704) / 89) * 83)) + ((((int)threadIdx.x) + 81) % 89)) - 252))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 190) {\n    if ((((((int)blockIdx.x) % 11) * 8) + ((((int)threadIdx.x) + 1056) / 89)) < 89) {\n      PaddedInput_shared[((((int)threadIdx.x) + 1056))] = (((((((((int)blockIdx.x) % 11) * 8) + ((((int)threadIdx.x) + 1056) / 89)) < 86) && (3 <= ((((int)threadIdx.x) + 77) % 89))) && (((((int)threadIdx.x) + 77) % 89) < 86)) ? data[(((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + (((((int)threadIdx.x) + 1056) / 89) * 83)) + ((((int)threadIdx.x) + 77) % 89)) - 252))] : 0.000000e+00f);\n    }\n  }\n  if (((int)threadIdx.x) < 49) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 462) / 11) * 49) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 49; ++k_inner_outer) {\n    if (((((((int)blockIdx.x) % 11) * 8) + (((int)threadIdx.x) / 44)) + (k_inner_outer / 7)) < 89) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[((((((((int)threadIdx.x) / 44) * 89) + ((k_inner_outer / 7) * 89)) + (((int)threadIdx.x) % 44)) + (k_inner_outer % 7)))];\n      if (((((int)threadIdx.x) % 44) + (k_inner_outer % 7)) < 45) {\n        PaddedInput_shared_local[(1)] = PaddedInput_shared[(((((((((int)threadIdx.x) / 44) * 89) + ((k_inner_outer / 7) * 89)) + (((int)threadIdx.x) % 44)) + (k_inner_outer % 7)) + 44))];\n      }\n    }\n    compute_shared_local[(0)] = compute_shared[(k_inner_outer)];\n    if ((((((int)blockIdx.x) % 11) * 8) + (((int)threadIdx.x) / 44)) < 83) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n      if ((((int)threadIdx.x) % 44) < 39) {\n        DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(1)] * compute_shared_local[(0)]));\n      }\n    }\n  }\n  if ((((((int)blockIdx.x) % 11) * 8) + (((int)threadIdx.x) / 44)) < 83) {\n    compute[((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + ((((int)threadIdx.x) / 44) * 83)) + (((int)threadIdx.x) % 44)))] = DepthwiseConv2d_local[(0)];\n    if ((((int)threadIdx.x) % 44) < 39) {\n      compute[(((((((((int)blockIdx.x) / 11) * 6889) + ((((int)blockIdx.x) % 11) * 664)) + ((((int)threadIdx.x) / 44) * 83)) + (((int)threadIdx.x) % 44)) + 44))] = DepthwiseConv2d_local[(1)];\n    }\n  }\n}\n", "gridDim": [59136, 1, 1], "blockDim": [352, 1, 1]}