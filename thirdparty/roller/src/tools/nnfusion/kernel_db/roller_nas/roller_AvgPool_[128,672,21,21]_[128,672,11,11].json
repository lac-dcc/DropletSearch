{"parameters": {"input_shape": [128, 672, 21, 21], "output_shape": [128, 672, 11, 11], "window_shape": [3, 3], "window_stride": [2, 2], "padding_below": [1, 1]}, "op_type": "AvgPool", "tvm_func_name": "roller_AvgPool__128_672_21_21___128_672_11_11_", "code": "extern \"C\" __global__ void roller_AvgPool__128_672_21_21___128_672_11_11_(float* __restrict__ Pool2d, float* __restrict__ data) {\n  __shared__ float compute_shared[299];\n  if ((((((int)blockIdx.x) & 1) * 6) + (((int)threadIdx.x) >> 4)) < 11) {\n    if ((((int)threadIdx.x) & 15) < 11) {\n      Pool2d[((((((((int)blockIdx.x) >> 1) * 121) + ((((int)blockIdx.x) & 1) * 66)) + ((((int)threadIdx.x) >> 4) * 11)) + (((int)threadIdx.x) & 15)))] = 0.000000e+00f;\n    }\n  }\n  compute_shared[(((int)threadIdx.x))] = ((((1 <= (((((int)blockIdx.x) & 1) * 12) + (((int)threadIdx.x) / 23))) && (1 <= (((int)threadIdx.x) % 23))) && ((((int)threadIdx.x) % 23) < 22)) ? data[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + ((((int)threadIdx.x) / 23) * 21)) + (((int)threadIdx.x) % 23)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 96))] = (((1 <= ((((int)threadIdx.x) + 4) % 23)) && (((((int)threadIdx.x) + 4) % 23) < 22)) ? data[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + (((((int)threadIdx.x) + 96) / 23) * 21)) + ((((int)threadIdx.x) + 4) % 23)))] : 0.000000e+00f);\n  if ((((((int)blockIdx.x) & 1) * 12) + ((((int)threadIdx.x) + 192) / 23)) < 23) {\n    compute_shared[((((int)threadIdx.x) + 192))] = (((((((((int)blockIdx.x) & 1) * 12) + ((((int)threadIdx.x) + 192) / 23)) < 22) && (1 <= ((((int)threadIdx.x) + 8) % 23))) && (((((int)threadIdx.x) + 8) % 23) < 22)) ? data[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + (((((int)threadIdx.x) + 192) / 23) * 21)) + ((((int)threadIdx.x) + 8) % 23)))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 11) {\n    if ((((((int)blockIdx.x) & 1) * 12) + ((((int)threadIdx.x) + 288) / 23)) < 23) {\n      compute_shared[((((int)threadIdx.x) + 288))] = ((((((((int)blockIdx.x) & 1) * 12) + ((((int)threadIdx.x) + 288) / 23)) < 22) && (((int)threadIdx.x) < 10)) ? data[((((((((int)blockIdx.x) >> 1) * 441) + ((((int)blockIdx.x) & 1) * 252)) + (((((int)threadIdx.x) + 288) / 23) * 21)) + (((int)threadIdx.x) + 12)))] : 0.000000e+00f);\n    }\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 9; ++k_inner_outer) {\n    if ((((((int)blockIdx.x) & 1) * 6) + (((int)threadIdx.x) >> 4)) < 11) {\n      if ((((int)threadIdx.x) & 15) < 11) {\n        Pool2d[((((((((int)blockIdx.x) >> 1) * 121) + ((((int)blockIdx.x) & 1) * 66)) + ((((int)threadIdx.x) >> 4) * 11)) + (((int)threadIdx.x) & 15)))] = (Pool2d[((((((((int)blockIdx.x) >> 1) * 121) + ((((int)blockIdx.x) & 1) * 66)) + ((((int)threadIdx.x) >> 4) * 11)) + (((int)threadIdx.x) & 15)))] + (compute_shared[((((((((int)threadIdx.x) >> 4) * 46) + ((k_inner_outer / 3) * 23)) + ((((int)threadIdx.x) & 15) * 2)) + (k_inner_outer % 3)))] * 1.111111e-01f));\n      }\n    }\n  }\n}\n", "gridDim": [172032, 1, 1], "blockDim": [96, 1, 1]}