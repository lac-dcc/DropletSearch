{"parameters": {"input_shape": [128, 336, 21, 21], "filter_shape": [336, 1, 5, 5], "output_shape": [128, 336, 21, 21], "window_movement_strides": [1, 1], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "roller_DepthwiseConv2dNative__128_336_21_21___5_5_336_1___128_336_21_21_", "code": "extern \"C\" __global__ void roller_DepthwiseConv2dNative__128_336_21_21___5_5_336_1___128_336_21_21_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {\n  float DepthwiseConv2d_local[1];\n  __shared__ float PaddedInput_shared[700];\n  __shared__ float compute_shared[100];\n  float PaddedInput_shared_local[1];\n  float compute_shared_local[1];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  PaddedInput_shared[(((int)threadIdx.x))] = (((((2 <= (((((int)blockIdx.x) % 7) * 3) + ((((int)threadIdx.x) % 175) / 25))) && ((((((int)blockIdx.x) % 7) * 3) + ((((int)threadIdx.x) % 175) / 25)) < 23)) && (2 <= (((int)threadIdx.x) % 25))) && ((((int)threadIdx.x) % 25) < 23)) ? data[((((((((((int)blockIdx.x) / 7) * 1764) + ((((int)threadIdx.x) / 175) * 441)) + ((((int)blockIdx.x) % 7) * 63)) + (((((int)threadIdx.x) % 175) / 25) * 21)) + (((int)threadIdx.x) % 25)) - 44))] : 0.000000e+00f);\n  PaddedInput_shared[((((int)threadIdx.x) + 288))] = (((((2 <= (((((int)blockIdx.x) % 7) * 3) + (((((int)threadIdx.x) + 113) % 175) / 25))) && ((((((int)blockIdx.x) % 7) * 3) + (((((int)threadIdx.x) + 113) % 175) / 25)) < 23)) && (2 <= ((((int)threadIdx.x) + 13) % 25))) && (((((int)threadIdx.x) + 13) % 25) < 23)) ? data[((((((((((int)blockIdx.x) / 7) * 1764) + (((((int)threadIdx.x) + 288) / 175) * 441)) + ((((int)blockIdx.x) % 7) * 63)) + ((((((int)threadIdx.x) + 113) % 175) / 25) * 21)) + ((((int)threadIdx.x) + 13) % 25)) - 44))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 124) {\n    PaddedInput_shared[((((int)threadIdx.x) + 576))] = (((((((((int)blockIdx.x) % 7) * 3) + ((((int)threadIdx.x) + 51) / 25)) < 23) && (2 <= ((((int)threadIdx.x) + 1) % 25))) && (((((int)threadIdx.x) + 1) % 25) < 23)) ? data[((((((((((int)blockIdx.x) / 7) * 1764) + (((((int)threadIdx.x) + 576) / 175) * 441)) + ((((int)blockIdx.x) % 7) * 63)) + (((((int)threadIdx.x) + 51) / 25) * 21)) + ((((int)threadIdx.x) + 1) % 25)) - 44))] : 0.000000e+00f);\n  }\n  if (((int)threadIdx.x) < 100) {\n    compute_shared[(((int)threadIdx.x))] = kernel[(((((((int)blockIdx.x) % 588) / 7) * 100) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 25; ++k_inner_outer) {\n    if (((((int)threadIdx.x) % 24) + (k_inner_outer % 5)) < 25) {\n      PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((((((int)threadIdx.x) / 72) * 175) + (((((int)threadIdx.x) % 72) / 24) * 25)) + ((k_inner_outer / 5) * 25)) + (((int)threadIdx.x) % 24)) + (k_inner_outer % 5)))];\n    }\n    compute_shared_local[(0)] = compute_shared[((((((int)threadIdx.x) / 72) * 25) + k_inner_outer))];\n    if ((((int)threadIdx.x) % 24) < 21) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * compute_shared_local[(0)]));\n    }\n  }\n  if ((((int)threadIdx.x) % 24) < 21) {\n    compute[(((((((((int)blockIdx.x) / 7) * 1764) + ((((int)threadIdx.x) / 72) * 441)) + ((((int)blockIdx.x) % 7) * 63)) + (((((int)threadIdx.x) % 72) / 24) * 21)) + (((int)threadIdx.x) % 24)))] = DepthwiseConv2d_local[(0)];\n  }\n}\n", "gridDim": [75264, 1, 1], "blockDim": [288, 1, 1]}