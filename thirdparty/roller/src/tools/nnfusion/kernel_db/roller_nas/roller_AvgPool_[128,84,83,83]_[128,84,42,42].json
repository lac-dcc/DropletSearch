{"parameters": {"input_shape": [128, 84, 83, 83], "output_shape": [128, 84, 42, 42], "window_shape": [3, 3], "window_stride": [2, 2], "padding_below": [1, 1]}, "op_type": "AvgPool", "tvm_func_name": "roller_AvgPool__128_84_83_83___128_84_42_42_", "code": "extern \"C\" __global__ void roller_AvgPool__128_84_83_83___128_84_42_42_(float* __restrict__ Pool2d, float* __restrict__ data) {\n  __shared__ float compute_shared[425];\n  if ((((int)threadIdx.x) % 48) < 42) {\n    Pool2d[((((((int)blockIdx.x) * 84) + ((((int)threadIdx.x) / 48) * 42)) + (((int)threadIdx.x) % 48)))] = 0.000000e+00f;\n  }\n  compute_shared[(((int)threadIdx.x))] = ((((1 <= (((((int)blockIdx.x) % 21) * 4) + (((int)threadIdx.x) / 85))) && (1 <= (((int)threadIdx.x) % 85))) && ((((int)threadIdx.x) % 85) < 84)) ? data[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + ((((int)threadIdx.x) / 85) * 83)) + (((int)threadIdx.x) % 85)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 96))] = (((1 <= ((((int)threadIdx.x) + 11) % 85)) && (((((int)threadIdx.x) + 11) % 85) < 84)) ? data[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + (((((int)threadIdx.x) + 96) / 85) * 83)) + ((((int)threadIdx.x) + 11) % 85)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 192))] = (((1 <= ((((int)threadIdx.x) + 22) % 85)) && (((((int)threadIdx.x) + 22) % 85) < 84)) ? data[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + (((((int)threadIdx.x) + 192) / 85) * 83)) + ((((int)threadIdx.x) + 22) % 85)))] : 0.000000e+00f);\n  compute_shared[((((int)threadIdx.x) + 288))] = (((((((((int)blockIdx.x) % 21) * 4) + ((((int)threadIdx.x) + 288) / 85)) < 84) && (1 <= ((((int)threadIdx.x) + 33) % 85))) && (((((int)threadIdx.x) + 33) % 85) < 84)) ? data[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + (((((int)threadIdx.x) + 288) / 85) * 83)) + ((((int)threadIdx.x) + 33) % 85)))] : 0.000000e+00f);\n  if (((int)threadIdx.x) < 41) {\n    compute_shared[((((int)threadIdx.x) + 384))] = ((((((((int)blockIdx.x) % 21) * 4) + ((((int)threadIdx.x) + 384) / 85)) < 84) && (((int)threadIdx.x) < 40)) ? data[((((((((int)blockIdx.x) / 21) * 6889) + ((((int)blockIdx.x) % 21) * 332)) + (((((int)threadIdx.x) + 384) / 85) * 83)) + (((int)threadIdx.x) + 44)))] : 0.000000e+00f);\n  }\n  __syncthreads();\n  for (int k_inner_outer = 0; k_inner_outer < 9; ++k_inner_outer) {\n    if ((((int)threadIdx.x) % 48) < 42) {\n      Pool2d[((((((int)blockIdx.x) * 84) + ((((int)threadIdx.x) / 48) * 42)) + (((int)threadIdx.x) % 48)))] = (Pool2d[((((((int)blockIdx.x) * 84) + ((((int)threadIdx.x) / 48) * 42)) + (((int)threadIdx.x) % 48)))] + (compute_shared[((((((((int)threadIdx.x) / 48) * 170) + ((k_inner_outer / 3) * 85)) + ((((int)threadIdx.x) % 48) * 2)) + (k_inner_outer % 3)))] * 1.111111e-01f));\n    }\n  }\n}\n", "gridDim": [225792, 1, 1], "blockDim": [96, 1, 1]}