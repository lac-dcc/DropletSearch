{"parameters": {"input_shape": [128, 2048, 7, 7], "filter_shape": [512, 2048, 1, 1], "output_shape": [128, 512, 7, 7], "window_movement_strides": [1, 1], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "Fused_Convolution_Add_Relu", "tvm_func_name": "roller_Convolution__128_2048_7_7___512_2048_1_1___128_512_7_7_", "code": "extern \"C\" __global__ void roller_Convolution__128_2048_7_7___512_2048_1_1___128_512_7_7_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {\n  float compute_local[32];\n  __shared__ float compute_shared[2048];\n  __shared__ float compute_d_shared[4096];\n  float compute_shared_local[8];\n  float compute_d_shared_local[4];\n  compute_local[(0)] = 0.000000e+00f;\n  compute_local[(8)] = 0.000000e+00f;\n  compute_local[(16)] = 0.000000e+00f;\n  compute_local[(24)] = 0.000000e+00f;\n  compute_local[(1)] = 0.000000e+00f;\n  compute_local[(9)] = 0.000000e+00f;\n  compute_local[(17)] = 0.000000e+00f;\n  compute_local[(25)] = 0.000000e+00f;\n  compute_local[(2)] = 0.000000e+00f;\n  compute_local[(10)] = 0.000000e+00f;\n  compute_local[(18)] = 0.000000e+00f;\n  compute_local[(26)] = 0.000000e+00f;\n  compute_local[(3)] = 0.000000e+00f;\n  compute_local[(11)] = 0.000000e+00f;\n  compute_local[(19)] = 0.000000e+00f;\n  compute_local[(27)] = 0.000000e+00f;\n  compute_local[(4)] = 0.000000e+00f;\n  compute_local[(12)] = 0.000000e+00f;\n  compute_local[(20)] = 0.000000e+00f;\n  compute_local[(28)] = 0.000000e+00f;\n  compute_local[(5)] = 0.000000e+00f;\n  compute_local[(13)] = 0.000000e+00f;\n  compute_local[(21)] = 0.000000e+00f;\n  compute_local[(29)] = 0.000000e+00f;\n  compute_local[(6)] = 0.000000e+00f;\n  compute_local[(14)] = 0.000000e+00f;\n  compute_local[(22)] = 0.000000e+00f;\n  compute_local[(30)] = 0.000000e+00f;\n  compute_local[(7)] = 0.000000e+00f;\n  compute_local[(15)] = 0.000000e+00f;\n  compute_local[(23)] = 0.000000e+00f;\n  compute_local[(31)] = 0.000000e+00f;\n  for (int k_outer = 0; k_outer < 64; ++k_outer) {\n    __syncthreads();\n    compute_shared[(((int)threadIdx.x))] = data[(((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)))];\n    compute_shared[((((int)threadIdx.x) + 256))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 196))];\n    compute_shared[((((int)threadIdx.x) + 512))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 392))];\n    compute_shared[((((int)threadIdx.x) + 768))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 588))];\n    compute_shared[((((int)threadIdx.x) + 1024))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 784))];\n    compute_shared[((((int)threadIdx.x) + 1280))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 980))];\n    compute_shared[((((int)threadIdx.x) + 1536))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 1176))];\n    compute_shared[((((int)threadIdx.x) + 1792))] = data[((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 100352) + (k_outer * 1568)) + ((((int)threadIdx.x) >> 6) * 49)) + ((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49)) + 1372))];\n    compute_d_shared[(((int)threadIdx.x))] = kernel[((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)))];\n    compute_d_shared[((((int)threadIdx.x) + 256))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 16384))];\n    compute_d_shared[((((int)threadIdx.x) + 512))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 32768))];\n    compute_d_shared[((((int)threadIdx.x) + 768))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 49152))];\n    compute_d_shared[((((int)threadIdx.x) + 1024))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 65536))];\n    compute_d_shared[((((int)threadIdx.x) + 1280))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 81920))];\n    compute_d_shared[((((int)threadIdx.x) + 1536))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 98304))];\n    compute_d_shared[((((int)threadIdx.x) + 1792))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 114688))];\n    compute_d_shared[((((int)threadIdx.x) + 2048))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 131072))];\n    compute_d_shared[((((int)threadIdx.x) + 2304))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 147456))];\n    compute_d_shared[((((int)threadIdx.x) + 2560))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 163840))];\n    compute_d_shared[((((int)threadIdx.x) + 2816))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 180224))];\n    compute_d_shared[((((int)threadIdx.x) + 3072))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 196608))];\n    compute_d_shared[((((int)threadIdx.x) + 3328))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 212992))];\n    compute_d_shared[((((int)threadIdx.x) + 3584))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 229376))];\n    compute_d_shared[((((int)threadIdx.x) + 3840))] = kernel[(((((((((int)blockIdx.x) / 98) * 262144) + ((((int)threadIdx.x) >> 5) * 2048)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 245760))];\n    __syncthreads();\n    for (int k_inner_outer = 0; k_inner_outer < 32; ++k_inner_outer) {\n      compute_shared_local[(0)] = compute_shared[(((k_inner_outer * 64) + (((int)threadIdx.x) & 7)))];\n      compute_shared_local[(1)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 8))];\n      compute_shared_local[(2)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 16))];\n      compute_shared_local[(3)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 24))];\n      compute_shared_local[(4)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 32))];\n      compute_shared_local[(5)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 40))];\n      compute_shared_local[(6)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 48))];\n      compute_shared_local[(7)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 7)) + 56))];\n      compute_d_shared_local[(0)] = compute_d_shared[((((((int)threadIdx.x) >> 3) * 32) + k_inner_outer))];\n      compute_d_shared_local[(1)] = compute_d_shared[(((((((int)threadIdx.x) >> 3) * 32) + k_inner_outer) + 1024))];\n      compute_d_shared_local[(2)] = compute_d_shared[(((((((int)threadIdx.x) >> 3) * 32) + k_inner_outer) + 2048))];\n      compute_d_shared_local[(3)] = compute_d_shared[(((((((int)threadIdx.x) >> 3) * 32) + k_inner_outer) + 3072))];\n      compute_local[(0)] = (compute_local[(0)] + (compute_shared_local[(0)] * compute_d_shared_local[(0)]));\n      compute_local[(8)] = (compute_local[(8)] + (compute_shared_local[(0)] * compute_d_shared_local[(1)]));\n      compute_local[(16)] = (compute_local[(16)] + (compute_shared_local[(0)] * compute_d_shared_local[(2)]));\n      compute_local[(24)] = (compute_local[(24)] + (compute_shared_local[(0)] * compute_d_shared_local[(3)]));\n      compute_local[(1)] = (compute_local[(1)] + (compute_shared_local[(1)] * compute_d_shared_local[(0)]));\n      compute_local[(9)] = (compute_local[(9)] + (compute_shared_local[(1)] * compute_d_shared_local[(1)]));\n      compute_local[(17)] = (compute_local[(17)] + (compute_shared_local[(1)] * compute_d_shared_local[(2)]));\n      compute_local[(25)] = (compute_local[(25)] + (compute_shared_local[(1)] * compute_d_shared_local[(3)]));\n      compute_local[(2)] = (compute_local[(2)] + (compute_shared_local[(2)] * compute_d_shared_local[(0)]));\n      compute_local[(10)] = (compute_local[(10)] + (compute_shared_local[(2)] * compute_d_shared_local[(1)]));\n      compute_local[(18)] = (compute_local[(18)] + (compute_shared_local[(2)] * compute_d_shared_local[(2)]));\n      compute_local[(26)] = (compute_local[(26)] + (compute_shared_local[(2)] * compute_d_shared_local[(3)]));\n      compute_local[(3)] = (compute_local[(3)] + (compute_shared_local[(3)] * compute_d_shared_local[(0)]));\n      compute_local[(11)] = (compute_local[(11)] + (compute_shared_local[(3)] * compute_d_shared_local[(1)]));\n      compute_local[(19)] = (compute_local[(19)] + (compute_shared_local[(3)] * compute_d_shared_local[(2)]));\n      compute_local[(27)] = (compute_local[(27)] + (compute_shared_local[(3)] * compute_d_shared_local[(3)]));\n      compute_local[(4)] = (compute_local[(4)] + (compute_shared_local[(4)] * compute_d_shared_local[(0)]));\n      compute_local[(12)] = (compute_local[(12)] + (compute_shared_local[(4)] * compute_d_shared_local[(1)]));\n      compute_local[(20)] = (compute_local[(20)] + (compute_shared_local[(4)] * compute_d_shared_local[(2)]));\n      compute_local[(28)] = (compute_local[(28)] + (compute_shared_local[(4)] * compute_d_shared_local[(3)]));\n      compute_local[(5)] = (compute_local[(5)] + (compute_shared_local[(5)] * compute_d_shared_local[(0)]));\n      compute_local[(13)] = (compute_local[(13)] + (compute_shared_local[(5)] * compute_d_shared_local[(1)]));\n      compute_local[(21)] = (compute_local[(21)] + (compute_shared_local[(5)] * compute_d_shared_local[(2)]));\n      compute_local[(29)] = (compute_local[(29)] + (compute_shared_local[(5)] * compute_d_shared_local[(3)]));\n      compute_local[(6)] = (compute_local[(6)] + (compute_shared_local[(6)] * compute_d_shared_local[(0)]));\n      compute_local[(14)] = (compute_local[(14)] + (compute_shared_local[(6)] * compute_d_shared_local[(1)]));\n      compute_local[(22)] = (compute_local[(22)] + (compute_shared_local[(6)] * compute_d_shared_local[(2)]));\n      compute_local[(30)] = (compute_local[(30)] + (compute_shared_local[(6)] * compute_d_shared_local[(3)]));\n      compute_local[(7)] = (compute_local[(7)] + (compute_shared_local[(7)] * compute_d_shared_local[(0)]));\n      compute_local[(15)] = (compute_local[(15)] + (compute_shared_local[(7)] * compute_d_shared_local[(1)]));\n      compute_local[(23)] = (compute_local[(23)] + (compute_shared_local[(7)] * compute_d_shared_local[(2)]));\n      compute_local[(31)] = (compute_local[(31)] + (compute_shared_local[(7)] * compute_d_shared_local[(3)]));\n    }\n  }\n  compute[((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)))] = max((compute_local[(0)] + bias[((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200704))] = max((compute_local[(8)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200704))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401408))] = max((compute_local[(16)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401408))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602112))] = max((compute_local[(24)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602112))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 8))] = max((compute_local[(1)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 8))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200712))] = max((compute_local[(9)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200712))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401416))] = max((compute_local[(17)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401416))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602120))] = max((compute_local[(25)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602120))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 16))] = max((compute_local[(2)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 16))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200720))] = max((compute_local[(10)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200720))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401424))] = max((compute_local[(18)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401424))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602128))] = max((compute_local[(26)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602128))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 24))] = max((compute_local[(3)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 24))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200728))] = max((compute_local[(11)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200728))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401432))] = max((compute_local[(19)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401432))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602136))] = max((compute_local[(27)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602136))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 32))] = max((compute_local[(4)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 32))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200736))] = max((compute_local[(12)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200736))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401440))] = max((compute_local[(20)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401440))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602144))] = max((compute_local[(28)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602144))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 40))] = max((compute_local[(5)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 40))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200744))] = max((compute_local[(13)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200744))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401448))] = max((compute_local[(21)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401448))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602152))] = max((compute_local[(29)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602152))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 48))] = max((compute_local[(6)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 48))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200752))] = max((compute_local[(14)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200752))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401456))] = max((compute_local[(22)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401456))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602160))] = max((compute_local[(30)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602160))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 56))] = max((compute_local[(7)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 56))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200760))] = max((compute_local[(15)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 200760))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401464))] = max((compute_local[(23)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 401464))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602168))] = max((compute_local[(31)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 3) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 7)) + 602168))]), 0.000000e+00f);\n}\n", "gridDim": [392, 1, 1], "blockDim": [256, 1, 1]}