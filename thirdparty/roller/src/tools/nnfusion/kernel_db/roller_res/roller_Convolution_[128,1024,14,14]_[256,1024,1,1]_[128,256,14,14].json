{"parameters": {"input_shape": [128, 1024, 14, 14], "filter_shape": [256, 1024, 1, 1], "output_shape": [128, 256, 14, 14], "window_movement_strides": [1, 1], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "Fused_Convolution_Add_Relu", "tvm_func_name": "roller_Convolution__128_1024_14_14___256_1024_1_1___128_256_14_14_", "code": "extern \"C\" __global__ void roller_Convolution__128_1024_14_14___256_1024_1_1___128_256_14_14_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {\n  float compute_local[64];\n  __shared__ float compute_shared[8192];\n  __shared__ float compute_d_shared[2048];\n  float compute_shared_local[8];\n  float compute_d_shared_local[8];\n  compute_local[(0)] = 0.000000e+00f;\n  compute_local[(8)] = 0.000000e+00f;\n  compute_local[(16)] = 0.000000e+00f;\n  compute_local[(24)] = 0.000000e+00f;\n  compute_local[(32)] = 0.000000e+00f;\n  compute_local[(40)] = 0.000000e+00f;\n  compute_local[(48)] = 0.000000e+00f;\n  compute_local[(56)] = 0.000000e+00f;\n  compute_local[(1)] = 0.000000e+00f;\n  compute_local[(9)] = 0.000000e+00f;\n  compute_local[(17)] = 0.000000e+00f;\n  compute_local[(25)] = 0.000000e+00f;\n  compute_local[(33)] = 0.000000e+00f;\n  compute_local[(41)] = 0.000000e+00f;\n  compute_local[(49)] = 0.000000e+00f;\n  compute_local[(57)] = 0.000000e+00f;\n  compute_local[(2)] = 0.000000e+00f;\n  compute_local[(10)] = 0.000000e+00f;\n  compute_local[(18)] = 0.000000e+00f;\n  compute_local[(26)] = 0.000000e+00f;\n  compute_local[(34)] = 0.000000e+00f;\n  compute_local[(42)] = 0.000000e+00f;\n  compute_local[(50)] = 0.000000e+00f;\n  compute_local[(58)] = 0.000000e+00f;\n  compute_local[(3)] = 0.000000e+00f;\n  compute_local[(11)] = 0.000000e+00f;\n  compute_local[(19)] = 0.000000e+00f;\n  compute_local[(27)] = 0.000000e+00f;\n  compute_local[(35)] = 0.000000e+00f;\n  compute_local[(43)] = 0.000000e+00f;\n  compute_local[(51)] = 0.000000e+00f;\n  compute_local[(59)] = 0.000000e+00f;\n  compute_local[(4)] = 0.000000e+00f;\n  compute_local[(12)] = 0.000000e+00f;\n  compute_local[(20)] = 0.000000e+00f;\n  compute_local[(28)] = 0.000000e+00f;\n  compute_local[(36)] = 0.000000e+00f;\n  compute_local[(44)] = 0.000000e+00f;\n  compute_local[(52)] = 0.000000e+00f;\n  compute_local[(60)] = 0.000000e+00f;\n  compute_local[(5)] = 0.000000e+00f;\n  compute_local[(13)] = 0.000000e+00f;\n  compute_local[(21)] = 0.000000e+00f;\n  compute_local[(29)] = 0.000000e+00f;\n  compute_local[(37)] = 0.000000e+00f;\n  compute_local[(45)] = 0.000000e+00f;\n  compute_local[(53)] = 0.000000e+00f;\n  compute_local[(61)] = 0.000000e+00f;\n  compute_local[(6)] = 0.000000e+00f;\n  compute_local[(14)] = 0.000000e+00f;\n  compute_local[(22)] = 0.000000e+00f;\n  compute_local[(30)] = 0.000000e+00f;\n  compute_local[(38)] = 0.000000e+00f;\n  compute_local[(46)] = 0.000000e+00f;\n  compute_local[(54)] = 0.000000e+00f;\n  compute_local[(62)] = 0.000000e+00f;\n  compute_local[(7)] = 0.000000e+00f;\n  compute_local[(15)] = 0.000000e+00f;\n  compute_local[(23)] = 0.000000e+00f;\n  compute_local[(31)] = 0.000000e+00f;\n  compute_local[(39)] = 0.000000e+00f;\n  compute_local[(47)] = 0.000000e+00f;\n  compute_local[(55)] = 0.000000e+00f;\n  compute_local[(63)] = 0.000000e+00f;\n  for (int k_outer = 0; k_outer < 32; ++k_outer) {\n    __syncthreads();\n    compute_shared[(((int)threadIdx.x))] = data[((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)))];\n    compute_shared[((((int)threadIdx.x) + 256))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 196))];\n    compute_shared[((((int)threadIdx.x) + 512))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 392))];\n    compute_shared[((((int)threadIdx.x) + 768))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 588))];\n    compute_shared[((((int)threadIdx.x) + 1024))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 784))];\n    compute_shared[((((int)threadIdx.x) + 1280))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 980))];\n    compute_shared[((((int)threadIdx.x) + 1536))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 1176))];\n    compute_shared[((((int)threadIdx.x) + 1792))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 1372))];\n    compute_shared[((((int)threadIdx.x) + 2048))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 1568))];\n    compute_shared[((((int)threadIdx.x) + 2304))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 1764))];\n    compute_shared[((((int)threadIdx.x) + 2560))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 1960))];\n    compute_shared[((((int)threadIdx.x) + 2816))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 2156))];\n    compute_shared[((((int)threadIdx.x) + 3072))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 2352))];\n    compute_shared[((((int)threadIdx.x) + 3328))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 2548))];\n    compute_shared[((((int)threadIdx.x) + 3584))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 2744))];\n    compute_shared[((((int)threadIdx.x) + 3840))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 2940))];\n    compute_shared[((((int)threadIdx.x) + 4096))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 3136))];\n    compute_shared[((((int)threadIdx.x) + 4352))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 3332))];\n    compute_shared[((((int)threadIdx.x) + 4608))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 3528))];\n    compute_shared[((((int)threadIdx.x) + 4864))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 3724))];\n    compute_shared[((((int)threadIdx.x) + 5120))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 3920))];\n    compute_shared[((((int)threadIdx.x) + 5376))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 4116))];\n    compute_shared[((((int)threadIdx.x) + 5632))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 4312))];\n    compute_shared[((((int)threadIdx.x) + 5888))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 4508))];\n    compute_shared[((((int)threadIdx.x) + 6144))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 4704))];\n    compute_shared[((((int)threadIdx.x) + 6400))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 4900))];\n    compute_shared[((((int)threadIdx.x) + 6656))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 5096))];\n    compute_shared[((((int)threadIdx.x) + 6912))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 5292))];\n    compute_shared[((((int)threadIdx.x) + 7168))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 5488))];\n    compute_shared[((((int)threadIdx.x) + 7424))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 5684))];\n    compute_shared[((((int)threadIdx.x) + 7680))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 5880))];\n    compute_shared[((((int)threadIdx.x) + 7936))] = data[(((((((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) / 196) * 200704) + (k_outer * 6272)) + ((((((int)blockIdx.x) % 98) * 256) + ((int)threadIdx.x)) % 196)) + 6076))];\n    compute_d_shared[(((int)threadIdx.x))] = kernel[((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)))];\n    compute_d_shared[((((int)threadIdx.x) + 256))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 8192))];\n    compute_d_shared[((((int)threadIdx.x) + 512))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 16384))];\n    compute_d_shared[((((int)threadIdx.x) + 768))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 24576))];\n    compute_d_shared[((((int)threadIdx.x) + 1024))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 32768))];\n    compute_d_shared[((((int)threadIdx.x) + 1280))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 40960))];\n    compute_d_shared[((((int)threadIdx.x) + 1536))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 49152))];\n    compute_d_shared[((((int)threadIdx.x) + 1792))] = kernel[(((((((((int)blockIdx.x) / 98) * 65536) + ((((int)threadIdx.x) >> 5) * 1024)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 57344))];\n    __syncthreads();\n    for (int k_inner_outer = 0; k_inner_outer < 32; ++k_inner_outer) {\n      compute_shared_local[(0)] = compute_shared[(((k_inner_outer * 256) + (((int)threadIdx.x) & 31)))];\n      compute_shared_local[(1)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 32))];\n      compute_shared_local[(2)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 64))];\n      compute_shared_local[(3)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 96))];\n      compute_shared_local[(4)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 128))];\n      compute_shared_local[(5)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 160))];\n      compute_shared_local[(6)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 192))];\n      compute_shared_local[(7)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 31)) + 224))];\n      compute_d_shared_local[(0)] = compute_d_shared[((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer))];\n      compute_d_shared_local[(1)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 256))];\n      compute_d_shared_local[(2)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 512))];\n      compute_d_shared_local[(3)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 768))];\n      compute_d_shared_local[(4)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 1024))];\n      compute_d_shared_local[(5)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 1280))];\n      compute_d_shared_local[(6)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 1536))];\n      compute_d_shared_local[(7)] = compute_d_shared[(((((((int)threadIdx.x) >> 5) * 32) + k_inner_outer) + 1792))];\n      compute_local[(0)] = (compute_local[(0)] + (compute_shared_local[(0)] * compute_d_shared_local[(0)]));\n      compute_local[(8)] = (compute_local[(8)] + (compute_shared_local[(0)] * compute_d_shared_local[(1)]));\n      compute_local[(16)] = (compute_local[(16)] + (compute_shared_local[(0)] * compute_d_shared_local[(2)]));\n      compute_local[(24)] = (compute_local[(24)] + (compute_shared_local[(0)] * compute_d_shared_local[(3)]));\n      compute_local[(32)] = (compute_local[(32)] + (compute_shared_local[(0)] * compute_d_shared_local[(4)]));\n      compute_local[(40)] = (compute_local[(40)] + (compute_shared_local[(0)] * compute_d_shared_local[(5)]));\n      compute_local[(48)] = (compute_local[(48)] + (compute_shared_local[(0)] * compute_d_shared_local[(6)]));\n      compute_local[(56)] = (compute_local[(56)] + (compute_shared_local[(0)] * compute_d_shared_local[(7)]));\n      compute_local[(1)] = (compute_local[(1)] + (compute_shared_local[(1)] * compute_d_shared_local[(0)]));\n      compute_local[(9)] = (compute_local[(9)] + (compute_shared_local[(1)] * compute_d_shared_local[(1)]));\n      compute_local[(17)] = (compute_local[(17)] + (compute_shared_local[(1)] * compute_d_shared_local[(2)]));\n      compute_local[(25)] = (compute_local[(25)] + (compute_shared_local[(1)] * compute_d_shared_local[(3)]));\n      compute_local[(33)] = (compute_local[(33)] + (compute_shared_local[(1)] * compute_d_shared_local[(4)]));\n      compute_local[(41)] = (compute_local[(41)] + (compute_shared_local[(1)] * compute_d_shared_local[(5)]));\n      compute_local[(49)] = (compute_local[(49)] + (compute_shared_local[(1)] * compute_d_shared_local[(6)]));\n      compute_local[(57)] = (compute_local[(57)] + (compute_shared_local[(1)] * compute_d_shared_local[(7)]));\n      compute_local[(2)] = (compute_local[(2)] + (compute_shared_local[(2)] * compute_d_shared_local[(0)]));\n      compute_local[(10)] = (compute_local[(10)] + (compute_shared_local[(2)] * compute_d_shared_local[(1)]));\n      compute_local[(18)] = (compute_local[(18)] + (compute_shared_local[(2)] * compute_d_shared_local[(2)]));\n      compute_local[(26)] = (compute_local[(26)] + (compute_shared_local[(2)] * compute_d_shared_local[(3)]));\n      compute_local[(34)] = (compute_local[(34)] + (compute_shared_local[(2)] * compute_d_shared_local[(4)]));\n      compute_local[(42)] = (compute_local[(42)] + (compute_shared_local[(2)] * compute_d_shared_local[(5)]));\n      compute_local[(50)] = (compute_local[(50)] + (compute_shared_local[(2)] * compute_d_shared_local[(6)]));\n      compute_local[(58)] = (compute_local[(58)] + (compute_shared_local[(2)] * compute_d_shared_local[(7)]));\n      compute_local[(3)] = (compute_local[(3)] + (compute_shared_local[(3)] * compute_d_shared_local[(0)]));\n      compute_local[(11)] = (compute_local[(11)] + (compute_shared_local[(3)] * compute_d_shared_local[(1)]));\n      compute_local[(19)] = (compute_local[(19)] + (compute_shared_local[(3)] * compute_d_shared_local[(2)]));\n      compute_local[(27)] = (compute_local[(27)] + (compute_shared_local[(3)] * compute_d_shared_local[(3)]));\n      compute_local[(35)] = (compute_local[(35)] + (compute_shared_local[(3)] * compute_d_shared_local[(4)]));\n      compute_local[(43)] = (compute_local[(43)] + (compute_shared_local[(3)] * compute_d_shared_local[(5)]));\n      compute_local[(51)] = (compute_local[(51)] + (compute_shared_local[(3)] * compute_d_shared_local[(6)]));\n      compute_local[(59)] = (compute_local[(59)] + (compute_shared_local[(3)] * compute_d_shared_local[(7)]));\n      compute_local[(4)] = (compute_local[(4)] + (compute_shared_local[(4)] * compute_d_shared_local[(0)]));\n      compute_local[(12)] = (compute_local[(12)] + (compute_shared_local[(4)] * compute_d_shared_local[(1)]));\n      compute_local[(20)] = (compute_local[(20)] + (compute_shared_local[(4)] * compute_d_shared_local[(2)]));\n      compute_local[(28)] = (compute_local[(28)] + (compute_shared_local[(4)] * compute_d_shared_local[(3)]));\n      compute_local[(36)] = (compute_local[(36)] + (compute_shared_local[(4)] * compute_d_shared_local[(4)]));\n      compute_local[(44)] = (compute_local[(44)] + (compute_shared_local[(4)] * compute_d_shared_local[(5)]));\n      compute_local[(52)] = (compute_local[(52)] + (compute_shared_local[(4)] * compute_d_shared_local[(6)]));\n      compute_local[(60)] = (compute_local[(60)] + (compute_shared_local[(4)] * compute_d_shared_local[(7)]));\n      compute_local[(5)] = (compute_local[(5)] + (compute_shared_local[(5)] * compute_d_shared_local[(0)]));\n      compute_local[(13)] = (compute_local[(13)] + (compute_shared_local[(5)] * compute_d_shared_local[(1)]));\n      compute_local[(21)] = (compute_local[(21)] + (compute_shared_local[(5)] * compute_d_shared_local[(2)]));\n      compute_local[(29)] = (compute_local[(29)] + (compute_shared_local[(5)] * compute_d_shared_local[(3)]));\n      compute_local[(37)] = (compute_local[(37)] + (compute_shared_local[(5)] * compute_d_shared_local[(4)]));\n      compute_local[(45)] = (compute_local[(45)] + (compute_shared_local[(5)] * compute_d_shared_local[(5)]));\n      compute_local[(53)] = (compute_local[(53)] + (compute_shared_local[(5)] * compute_d_shared_local[(6)]));\n      compute_local[(61)] = (compute_local[(61)] + (compute_shared_local[(5)] * compute_d_shared_local[(7)]));\n      compute_local[(6)] = (compute_local[(6)] + (compute_shared_local[(6)] * compute_d_shared_local[(0)]));\n      compute_local[(14)] = (compute_local[(14)] + (compute_shared_local[(6)] * compute_d_shared_local[(1)]));\n      compute_local[(22)] = (compute_local[(22)] + (compute_shared_local[(6)] * compute_d_shared_local[(2)]));\n      compute_local[(30)] = (compute_local[(30)] + (compute_shared_local[(6)] * compute_d_shared_local[(3)]));\n      compute_local[(38)] = (compute_local[(38)] + (compute_shared_local[(6)] * compute_d_shared_local[(4)]));\n      compute_local[(46)] = (compute_local[(46)] + (compute_shared_local[(6)] * compute_d_shared_local[(5)]));\n      compute_local[(54)] = (compute_local[(54)] + (compute_shared_local[(6)] * compute_d_shared_local[(6)]));\n      compute_local[(62)] = (compute_local[(62)] + (compute_shared_local[(6)] * compute_d_shared_local[(7)]));\n      compute_local[(7)] = (compute_local[(7)] + (compute_shared_local[(7)] * compute_d_shared_local[(0)]));\n      compute_local[(15)] = (compute_local[(15)] + (compute_shared_local[(7)] * compute_d_shared_local[(1)]));\n      compute_local[(23)] = (compute_local[(23)] + (compute_shared_local[(7)] * compute_d_shared_local[(2)]));\n      compute_local[(31)] = (compute_local[(31)] + (compute_shared_local[(7)] * compute_d_shared_local[(3)]));\n      compute_local[(39)] = (compute_local[(39)] + (compute_shared_local[(7)] * compute_d_shared_local[(4)]));\n      compute_local[(47)] = (compute_local[(47)] + (compute_shared_local[(7)] * compute_d_shared_local[(5)]));\n      compute_local[(55)] = (compute_local[(55)] + (compute_shared_local[(7)] * compute_d_shared_local[(6)]));\n      compute_local[(63)] = (compute_local[(63)] + (compute_shared_local[(7)] * compute_d_shared_local[(7)]));\n    }\n  }\n  compute[((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)))] = max((compute_local[(0)] + bias[((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200704))] = max((compute_local[(8)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200704))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401408))] = max((compute_local[(16)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401408))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602112))] = max((compute_local[(24)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602112))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802816))] = max((compute_local[(32)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802816))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003520))] = max((compute_local[(40)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003520))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204224))] = max((compute_local[(48)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204224))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1404928))] = max((compute_local[(56)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1404928))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 32))] = max((compute_local[(1)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 32))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200736))] = max((compute_local[(9)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200736))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401440))] = max((compute_local[(17)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401440))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602144))] = max((compute_local[(25)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602144))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802848))] = max((compute_local[(33)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802848))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003552))] = max((compute_local[(41)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003552))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204256))] = max((compute_local[(49)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204256))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1404960))] = max((compute_local[(57)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1404960))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 64))] = max((compute_local[(2)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 64))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200768))] = max((compute_local[(10)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200768))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401472))] = max((compute_local[(18)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401472))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602176))] = max((compute_local[(26)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602176))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802880))] = max((compute_local[(34)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802880))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003584))] = max((compute_local[(42)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003584))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204288))] = max((compute_local[(50)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204288))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1404992))] = max((compute_local[(58)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1404992))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 96))] = max((compute_local[(3)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 96))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200800))] = max((compute_local[(11)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200800))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401504))] = max((compute_local[(19)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401504))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602208))] = max((compute_local[(27)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602208))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802912))] = max((compute_local[(35)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802912))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003616))] = max((compute_local[(43)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003616))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204320))] = max((compute_local[(51)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204320))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405024))] = max((compute_local[(59)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405024))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 128))] = max((compute_local[(4)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 128))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200832))] = max((compute_local[(12)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200832))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401536))] = max((compute_local[(20)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401536))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602240))] = max((compute_local[(28)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602240))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802944))] = max((compute_local[(36)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802944))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003648))] = max((compute_local[(44)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003648))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204352))] = max((compute_local[(52)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204352))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405056))] = max((compute_local[(60)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405056))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 160))] = max((compute_local[(5)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 160))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200864))] = max((compute_local[(13)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200864))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401568))] = max((compute_local[(21)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401568))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602272))] = max((compute_local[(29)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602272))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802976))] = max((compute_local[(37)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 802976))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003680))] = max((compute_local[(45)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003680))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204384))] = max((compute_local[(53)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204384))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405088))] = max((compute_local[(61)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405088))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 192))] = max((compute_local[(6)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 192))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200896))] = max((compute_local[(14)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200896))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401600))] = max((compute_local[(22)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401600))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602304))] = max((compute_local[(30)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602304))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 803008))] = max((compute_local[(38)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 803008))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003712))] = max((compute_local[(46)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003712))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204416))] = max((compute_local[(54)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204416))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405120))] = max((compute_local[(62)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405120))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 224))] = max((compute_local[(7)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 224))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200928))] = max((compute_local[(15)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 200928))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401632))] = max((compute_local[(23)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 401632))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602336))] = max((compute_local[(31)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 602336))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 803040))] = max((compute_local[(39)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 803040))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003744))] = max((compute_local[(47)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1003744))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204448))] = max((compute_local[(55)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1204448))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405152))] = max((compute_local[(63)] + bias[(((((((((int)blockIdx.x) / 98) * 1605632) + ((((int)threadIdx.x) >> 5) * 25088)) + ((((int)blockIdx.x) % 98) * 256)) + (((int)threadIdx.x) & 31)) + 1405152))]), 0.000000e+00f);\n}\n", "gridDim": [392, 1, 1], "blockDim": [256, 1, 1]}