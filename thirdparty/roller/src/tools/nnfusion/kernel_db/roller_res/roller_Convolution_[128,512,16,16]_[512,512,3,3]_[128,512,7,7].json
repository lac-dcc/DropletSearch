{"parameters": {"input_shape": [128, 512, 16, 16], "filter_shape": [512, 512, 3, 3], "output_shape": [128, 512, 7, 7], "window_movement_strides": [2, 2], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "Fused_Convolution_Add_Relu", "tvm_func_name": "roller_Convolution__128_512_16_16___512_512_3_3___128_512_7_7_", "code": "extern \"C\" __global__ void roller_Convolution__128_512_16_16___512_512_3_3___128_512_7_7_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {\n  float compute_local[32];\n  __shared__ float compute_shared[2048];\n  __shared__ float compute_d_shared[4096];\n  float compute_shared_local[4];\n  float compute_d_shared_local[8];\n  compute_local[(0)] = 0.000000e+00f;\n  compute_local[(4)] = 0.000000e+00f;\n  compute_local[(8)] = 0.000000e+00f;\n  compute_local[(12)] = 0.000000e+00f;\n  compute_local[(16)] = 0.000000e+00f;\n  compute_local[(20)] = 0.000000e+00f;\n  compute_local[(24)] = 0.000000e+00f;\n  compute_local[(28)] = 0.000000e+00f;\n  compute_local[(1)] = 0.000000e+00f;\n  compute_local[(5)] = 0.000000e+00f;\n  compute_local[(9)] = 0.000000e+00f;\n  compute_local[(13)] = 0.000000e+00f;\n  compute_local[(17)] = 0.000000e+00f;\n  compute_local[(21)] = 0.000000e+00f;\n  compute_local[(25)] = 0.000000e+00f;\n  compute_local[(29)] = 0.000000e+00f;\n  compute_local[(2)] = 0.000000e+00f;\n  compute_local[(6)] = 0.000000e+00f;\n  compute_local[(10)] = 0.000000e+00f;\n  compute_local[(14)] = 0.000000e+00f;\n  compute_local[(18)] = 0.000000e+00f;\n  compute_local[(22)] = 0.000000e+00f;\n  compute_local[(26)] = 0.000000e+00f;\n  compute_local[(30)] = 0.000000e+00f;\n  compute_local[(3)] = 0.000000e+00f;\n  compute_local[(7)] = 0.000000e+00f;\n  compute_local[(11)] = 0.000000e+00f;\n  compute_local[(15)] = 0.000000e+00f;\n  compute_local[(19)] = 0.000000e+00f;\n  compute_local[(23)] = 0.000000e+00f;\n  compute_local[(27)] = 0.000000e+00f;\n  compute_local[(31)] = 0.000000e+00f;\n  for (int k_outer = 0; k_outer < 144; ++k_outer) {\n    __syncthreads();\n    compute_shared[(((int)threadIdx.x))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + ((((k_outer * 32) + (((int)threadIdx.x) >> 6)) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + (((k_outer * 32) + (((int)threadIdx.x) >> 6)) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 256))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 4) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 4) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + ((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 1) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 512))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 8) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 8) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + ((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 2) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 768))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 12) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 3) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + (((k_outer * 32) + (((int)threadIdx.x) >> 6)) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 1024))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 16) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 7) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + ((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 1) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 1280))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 20) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 2) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + ((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 2) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 1536))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 24) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 6) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + (((k_outer * 32) + (((int)threadIdx.x) >> 6)) % 3)))];\n    compute_shared[((((int)threadIdx.x) + 1792))] = data[(((((((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) / 49) * 131072) + (((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 28) / 9) * 256)) + ((((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 49) / 7) * 32)) + ((((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 1) % 9) / 3) * 16)) + (((((((int)blockIdx.x) % 98) * 64) + (((int)threadIdx.x) & 63)) % 7) * 2)) + ((((k_outer * 32) + (((int)threadIdx.x) >> 6)) + 1) % 3)))];\n    compute_d_shared[(((int)threadIdx.x))] = kernel[((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)))];\n    compute_d_shared[((((int)threadIdx.x) + 256))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 36864))];\n    compute_d_shared[((((int)threadIdx.x) + 512))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 73728))];\n    compute_d_shared[((((int)threadIdx.x) + 768))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 110592))];\n    compute_d_shared[((((int)threadIdx.x) + 1024))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 147456))];\n    compute_d_shared[((((int)threadIdx.x) + 1280))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 184320))];\n    compute_d_shared[((((int)threadIdx.x) + 1536))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 221184))];\n    compute_d_shared[((((int)threadIdx.x) + 1792))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 258048))];\n    compute_d_shared[((((int)threadIdx.x) + 2048))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 294912))];\n    compute_d_shared[((((int)threadIdx.x) + 2304))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 331776))];\n    compute_d_shared[((((int)threadIdx.x) + 2560))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 368640))];\n    compute_d_shared[((((int)threadIdx.x) + 2816))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 405504))];\n    compute_d_shared[((((int)threadIdx.x) + 3072))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 442368))];\n    compute_d_shared[((((int)threadIdx.x) + 3328))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 479232))];\n    compute_d_shared[((((int)threadIdx.x) + 3584))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 516096))];\n    compute_d_shared[((((int)threadIdx.x) + 3840))] = kernel[(((((((((int)blockIdx.x) / 98) * 589824) + ((((int)threadIdx.x) >> 5) * 4608)) + (k_outer * 32)) + (((int)threadIdx.x) & 31)) + 552960))];\n    __syncthreads();\n    for (int k_inner_outer = 0; k_inner_outer < 32; ++k_inner_outer) {\n      compute_shared_local[(0)] = compute_shared[(((k_inner_outer * 64) + (((int)threadIdx.x) & 15)))];\n      compute_shared_local[(1)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 15)) + 16))];\n      compute_shared_local[(2)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 15)) + 32))];\n      compute_shared_local[(3)] = compute_shared[((((k_inner_outer * 64) + (((int)threadIdx.x) & 15)) + 48))];\n      compute_d_shared_local[(0)] = compute_d_shared[((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer))];\n      compute_d_shared_local[(1)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 512))];\n      compute_d_shared_local[(2)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 1024))];\n      compute_d_shared_local[(3)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 1536))];\n      compute_d_shared_local[(4)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 2048))];\n      compute_d_shared_local[(5)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 2560))];\n      compute_d_shared_local[(6)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 3072))];\n      compute_d_shared_local[(7)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 32) + k_inner_outer) + 3584))];\n      compute_local[(0)] = (compute_local[(0)] + (compute_shared_local[(0)] * compute_d_shared_local[(0)]));\n      compute_local[(4)] = (compute_local[(4)] + (compute_shared_local[(0)] * compute_d_shared_local[(1)]));\n      compute_local[(8)] = (compute_local[(8)] + (compute_shared_local[(0)] * compute_d_shared_local[(2)]));\n      compute_local[(12)] = (compute_local[(12)] + (compute_shared_local[(0)] * compute_d_shared_local[(3)]));\n      compute_local[(16)] = (compute_local[(16)] + (compute_shared_local[(0)] * compute_d_shared_local[(4)]));\n      compute_local[(20)] = (compute_local[(20)] + (compute_shared_local[(0)] * compute_d_shared_local[(5)]));\n      compute_local[(24)] = (compute_local[(24)] + (compute_shared_local[(0)] * compute_d_shared_local[(6)]));\n      compute_local[(28)] = (compute_local[(28)] + (compute_shared_local[(0)] * compute_d_shared_local[(7)]));\n      compute_local[(1)] = (compute_local[(1)] + (compute_shared_local[(1)] * compute_d_shared_local[(0)]));\n      compute_local[(5)] = (compute_local[(5)] + (compute_shared_local[(1)] * compute_d_shared_local[(1)]));\n      compute_local[(9)] = (compute_local[(9)] + (compute_shared_local[(1)] * compute_d_shared_local[(2)]));\n      compute_local[(13)] = (compute_local[(13)] + (compute_shared_local[(1)] * compute_d_shared_local[(3)]));\n      compute_local[(17)] = (compute_local[(17)] + (compute_shared_local[(1)] * compute_d_shared_local[(4)]));\n      compute_local[(21)] = (compute_local[(21)] + (compute_shared_local[(1)] * compute_d_shared_local[(5)]));\n      compute_local[(25)] = (compute_local[(25)] + (compute_shared_local[(1)] * compute_d_shared_local[(6)]));\n      compute_local[(29)] = (compute_local[(29)] + (compute_shared_local[(1)] * compute_d_shared_local[(7)]));\n      compute_local[(2)] = (compute_local[(2)] + (compute_shared_local[(2)] * compute_d_shared_local[(0)]));\n      compute_local[(6)] = (compute_local[(6)] + (compute_shared_local[(2)] * compute_d_shared_local[(1)]));\n      compute_local[(10)] = (compute_local[(10)] + (compute_shared_local[(2)] * compute_d_shared_local[(2)]));\n      compute_local[(14)] = (compute_local[(14)] + (compute_shared_local[(2)] * compute_d_shared_local[(3)]));\n      compute_local[(18)] = (compute_local[(18)] + (compute_shared_local[(2)] * compute_d_shared_local[(4)]));\n      compute_local[(22)] = (compute_local[(22)] + (compute_shared_local[(2)] * compute_d_shared_local[(5)]));\n      compute_local[(26)] = (compute_local[(26)] + (compute_shared_local[(2)] * compute_d_shared_local[(6)]));\n      compute_local[(30)] = (compute_local[(30)] + (compute_shared_local[(2)] * compute_d_shared_local[(7)]));\n      compute_local[(3)] = (compute_local[(3)] + (compute_shared_local[(3)] * compute_d_shared_local[(0)]));\n      compute_local[(7)] = (compute_local[(7)] + (compute_shared_local[(3)] * compute_d_shared_local[(1)]));\n      compute_local[(11)] = (compute_local[(11)] + (compute_shared_local[(3)] * compute_d_shared_local[(2)]));\n      compute_local[(15)] = (compute_local[(15)] + (compute_shared_local[(3)] * compute_d_shared_local[(3)]));\n      compute_local[(19)] = (compute_local[(19)] + (compute_shared_local[(3)] * compute_d_shared_local[(4)]));\n      compute_local[(23)] = (compute_local[(23)] + (compute_shared_local[(3)] * compute_d_shared_local[(5)]));\n      compute_local[(27)] = (compute_local[(27)] + (compute_shared_local[(3)] * compute_d_shared_local[(6)]));\n      compute_local[(31)] = (compute_local[(31)] + (compute_shared_local[(3)] * compute_d_shared_local[(7)]));\n    }\n  }\n  compute[((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)))] = max((compute_local[(0)] + bias[((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100352))] = max((compute_local[(4)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100352))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200704))] = max((compute_local[(8)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200704))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301056))] = max((compute_local[(12)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301056))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401408))] = max((compute_local[(16)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401408))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501760))] = max((compute_local[(20)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501760))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602112))] = max((compute_local[(24)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602112))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702464))] = max((compute_local[(28)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702464))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 16))] = max((compute_local[(1)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 16))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100368))] = max((compute_local[(5)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100368))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200720))] = max((compute_local[(9)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200720))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301072))] = max((compute_local[(13)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301072))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401424))] = max((compute_local[(17)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401424))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501776))] = max((compute_local[(21)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501776))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602128))] = max((compute_local[(25)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602128))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702480))] = max((compute_local[(29)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702480))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 32))] = max((compute_local[(2)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 32))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100384))] = max((compute_local[(6)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100384))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200736))] = max((compute_local[(10)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200736))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301088))] = max((compute_local[(14)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301088))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401440))] = max((compute_local[(18)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401440))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501792))] = max((compute_local[(22)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501792))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602144))] = max((compute_local[(26)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602144))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702496))] = max((compute_local[(30)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702496))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 48))] = max((compute_local[(3)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 48))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100400))] = max((compute_local[(7)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 100400))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200752))] = max((compute_local[(11)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 200752))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301104))] = max((compute_local[(15)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 301104))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401456))] = max((compute_local[(19)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 401456))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501808))] = max((compute_local[(23)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 501808))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602160))] = max((compute_local[(27)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 602160))]), 0.000000e+00f);\n  compute[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702512))] = max((compute_local[(31)] + bias[(((((((((int)blockIdx.x) / 98) * 802816) + ((((int)threadIdx.x) >> 4) * 6272)) + ((((int)blockIdx.x) % 98) * 64)) + (((int)threadIdx.x) & 15)) + 702512))]), 0.000000e+00f);\n}\n", "gridDim": [392, 1, 1], "blockDim": [256, 1, 1]}