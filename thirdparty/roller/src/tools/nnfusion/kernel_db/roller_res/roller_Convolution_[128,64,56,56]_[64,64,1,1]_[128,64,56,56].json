{"parameters": {"input_shape": [128, 64, 56, 56], "filter_shape": [64, 64, 1, 1], "output_shape": [128, 64, 56, 56], "window_movement_strides": [1, 1], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "Fused_Convolution_Add_Relu", "tvm_func_name": "roller_Convolution__128_64_56_56___64_64_1_1___128_64_56_56_", "code": "extern \"C\" __global__ void roller_Convolution__128_64_56_56___64_64_1_1___128_64_56_56_(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute, float* __restrict__ bias) {\n  float compute_local[32];\n  __shared__ float compute_shared[2048];\n  __shared__ float compute_d_shared[512];\n  float compute_shared_local[16];\n  float compute_d_shared_local[2];\n  compute_local[(0)] = 0.000000e+00f;\n  compute_local[(16)] = 0.000000e+00f;\n  compute_local[(1)] = 0.000000e+00f;\n  compute_local[(17)] = 0.000000e+00f;\n  compute_local[(2)] = 0.000000e+00f;\n  compute_local[(18)] = 0.000000e+00f;\n  compute_local[(3)] = 0.000000e+00f;\n  compute_local[(19)] = 0.000000e+00f;\n  compute_local[(4)] = 0.000000e+00f;\n  compute_local[(20)] = 0.000000e+00f;\n  compute_local[(5)] = 0.000000e+00f;\n  compute_local[(21)] = 0.000000e+00f;\n  compute_local[(6)] = 0.000000e+00f;\n  compute_local[(22)] = 0.000000e+00f;\n  compute_local[(7)] = 0.000000e+00f;\n  compute_local[(23)] = 0.000000e+00f;\n  compute_local[(8)] = 0.000000e+00f;\n  compute_local[(24)] = 0.000000e+00f;\n  compute_local[(9)] = 0.000000e+00f;\n  compute_local[(25)] = 0.000000e+00f;\n  compute_local[(10)] = 0.000000e+00f;\n  compute_local[(26)] = 0.000000e+00f;\n  compute_local[(11)] = 0.000000e+00f;\n  compute_local[(27)] = 0.000000e+00f;\n  compute_local[(12)] = 0.000000e+00f;\n  compute_local[(28)] = 0.000000e+00f;\n  compute_local[(13)] = 0.000000e+00f;\n  compute_local[(29)] = 0.000000e+00f;\n  compute_local[(14)] = 0.000000e+00f;\n  compute_local[(30)] = 0.000000e+00f;\n  compute_local[(15)] = 0.000000e+00f;\n  compute_local[(31)] = 0.000000e+00f;\n  for (int k_outer = 0; k_outer < 8; ++k_outer) {\n    __syncthreads();\n    compute_shared[(((int)threadIdx.x))] = data[((((((((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) / 3136) * 200704) + (k_outer * 25088)) + ((((int)threadIdx.x) >> 8) * 3136)) + (((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) % 3136)))];\n    compute_shared[((((int)threadIdx.x) + 512))] = data[(((((((((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) / 3136) * 200704) + (k_outer * 25088)) + ((((int)threadIdx.x) >> 8) * 3136)) + (((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) % 3136)) + 6272))];\n    compute_shared[((((int)threadIdx.x) + 1024))] = data[(((((((((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) / 3136) * 200704) + (k_outer * 25088)) + ((((int)threadIdx.x) >> 8) * 3136)) + (((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) % 3136)) + 12544))];\n    compute_shared[((((int)threadIdx.x) + 1536))] = data[(((((((((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) / 3136) * 200704) + (k_outer * 25088)) + ((((int)threadIdx.x) >> 8) * 3136)) + (((((int)blockIdx.x) * 256) + (((int)threadIdx.x) & 255)) % 3136)) + 18816))];\n    compute_d_shared[(((int)threadIdx.x))] = kernel[(((((((int)threadIdx.x) >> 3) * 64) + (k_outer * 8)) + (((int)threadIdx.x) & 7)))];\n    __syncthreads();\n    for (int k_inner_outer = 0; k_inner_outer < 8; ++k_inner_outer) {\n      compute_shared_local[(0)] = compute_shared[(((k_inner_outer * 256) + (((int)threadIdx.x) & 15)))];\n      compute_shared_local[(1)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 16))];\n      compute_shared_local[(2)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 32))];\n      compute_shared_local[(3)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 48))];\n      compute_shared_local[(4)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 64))];\n      compute_shared_local[(5)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 80))];\n      compute_shared_local[(6)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 96))];\n      compute_shared_local[(7)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 112))];\n      compute_shared_local[(8)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 128))];\n      compute_shared_local[(9)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 144))];\n      compute_shared_local[(10)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 160))];\n      compute_shared_local[(11)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 176))];\n      compute_shared_local[(12)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 192))];\n      compute_shared_local[(13)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 208))];\n      compute_shared_local[(14)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 224))];\n      compute_shared_local[(15)] = compute_shared[((((k_inner_outer * 256) + (((int)threadIdx.x) & 15)) + 240))];\n      compute_d_shared_local[(0)] = compute_d_shared[((((((int)threadIdx.x) >> 4) * 8) + k_inner_outer))];\n      compute_d_shared_local[(1)] = compute_d_shared[(((((((int)threadIdx.x) >> 4) * 8) + k_inner_outer) + 256))];\n      compute_local[(0)] = (compute_local[(0)] + (compute_shared_local[(0)] * compute_d_shared_local[(0)]));\n      compute_local[(16)] = (compute_local[(16)] + (compute_shared_local[(0)] * compute_d_shared_local[(1)]));\n      compute_local[(1)] = (compute_local[(1)] + (compute_shared_local[(1)] * compute_d_shared_local[(0)]));\n      compute_local[(17)] = (compute_local[(17)] + (compute_shared_local[(1)] * compute_d_shared_local[(1)]));\n      compute_local[(2)] = (compute_local[(2)] + (compute_shared_local[(2)] * compute_d_shared_local[(0)]));\n      compute_local[(18)] = (compute_local[(18)] + (compute_shared_local[(2)] * compute_d_shared_local[(1)]));\n      compute_local[(3)] = (compute_local[(3)] + (compute_shared_local[(3)] * compute_d_shared_local[(0)]));\n      compute_local[(19)] = (compute_local[(19)] + (compute_shared_local[(3)] * compute_d_shared_local[(1)]));\n      compute_local[(4)] = (compute_local[(4)] + (compute_shared_local[(4)] * compute_d_shared_local[(0)]));\n      compute_local[(20)] = (compute_local[(20)] + (compute_shared_local[(4)] * compute_d_shared_local[(1)]));\n      compute_local[(5)] = (compute_local[(5)] + (compute_shared_local[(5)] * compute_d_shared_local[(0)]));\n      compute_local[(21)] = (compute_local[(21)] + (compute_shared_local[(5)] * compute_d_shared_local[(1)]));\n      compute_local[(6)] = (compute_local[(6)] + (compute_shared_local[(6)] * compute_d_shared_local[(0)]));\n      compute_local[(22)] = (compute_local[(22)] + (compute_shared_local[(6)] * compute_d_shared_local[(1)]));\n      compute_local[(7)] = (compute_local[(7)] + (compute_shared_local[(7)] * compute_d_shared_local[(0)]));\n      compute_local[(23)] = (compute_local[(23)] + (compute_shared_local[(7)] * compute_d_shared_local[(1)]));\n      compute_local[(8)] = (compute_local[(8)] + (compute_shared_local[(8)] * compute_d_shared_local[(0)]));\n      compute_local[(24)] = (compute_local[(24)] + (compute_shared_local[(8)] * compute_d_shared_local[(1)]));\n      compute_local[(9)] = (compute_local[(9)] + (compute_shared_local[(9)] * compute_d_shared_local[(0)]));\n      compute_local[(25)] = (compute_local[(25)] + (compute_shared_local[(9)] * compute_d_shared_local[(1)]));\n      compute_local[(10)] = (compute_local[(10)] + (compute_shared_local[(10)] * compute_d_shared_local[(0)]));\n      compute_local[(26)] = (compute_local[(26)] + (compute_shared_local[(10)] * compute_d_shared_local[(1)]));\n      compute_local[(11)] = (compute_local[(11)] + (compute_shared_local[(11)] * compute_d_shared_local[(0)]));\n      compute_local[(27)] = (compute_local[(27)] + (compute_shared_local[(11)] * compute_d_shared_local[(1)]));\n      compute_local[(12)] = (compute_local[(12)] + (compute_shared_local[(12)] * compute_d_shared_local[(0)]));\n      compute_local[(28)] = (compute_local[(28)] + (compute_shared_local[(12)] * compute_d_shared_local[(1)]));\n      compute_local[(13)] = (compute_local[(13)] + (compute_shared_local[(13)] * compute_d_shared_local[(0)]));\n      compute_local[(29)] = (compute_local[(29)] + (compute_shared_local[(13)] * compute_d_shared_local[(1)]));\n      compute_local[(14)] = (compute_local[(14)] + (compute_shared_local[(14)] * compute_d_shared_local[(0)]));\n      compute_local[(30)] = (compute_local[(30)] + (compute_shared_local[(14)] * compute_d_shared_local[(1)]));\n      compute_local[(15)] = (compute_local[(15)] + (compute_shared_local[(15)] * compute_d_shared_local[(0)]));\n      compute_local[(31)] = (compute_local[(31)] + (compute_shared_local[(15)] * compute_d_shared_local[(1)]));\n    }\n  }\n  compute[(((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)))] = max((compute_local[(0)] + bias[(((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845056))] = max((compute_local[(16)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845056))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 16))] = max((compute_local[(1)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 16))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845072))] = max((compute_local[(17)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845072))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 32))] = max((compute_local[(2)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 32))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845088))] = max((compute_local[(18)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845088))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 48))] = max((compute_local[(3)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 48))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845104))] = max((compute_local[(19)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845104))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 64))] = max((compute_local[(4)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 64))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845120))] = max((compute_local[(20)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845120))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 80))] = max((compute_local[(5)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 80))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845136))] = max((compute_local[(21)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845136))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 96))] = max((compute_local[(6)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 96))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845152))] = max((compute_local[(22)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845152))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 112))] = max((compute_local[(7)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 112))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845168))] = max((compute_local[(23)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845168))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 128))] = max((compute_local[(8)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 128))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845184))] = max((compute_local[(24)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845184))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 144))] = max((compute_local[(9)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 144))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845200))] = max((compute_local[(25)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845200))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 160))] = max((compute_local[(10)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 160))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845216))] = max((compute_local[(26)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845216))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 176))] = max((compute_local[(11)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 176))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845232))] = max((compute_local[(27)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845232))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 192))] = max((compute_local[(12)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 192))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845248))] = max((compute_local[(28)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845248))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 208))] = max((compute_local[(13)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 208))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845264))] = max((compute_local[(29)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845264))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 224))] = max((compute_local[(14)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 224))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845280))] = max((compute_local[(30)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845280))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 240))] = max((compute_local[(15)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 240))]), 0.000000e+00f);\n  compute[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845296))] = max((compute_local[(31)] + bias[((((((((int)threadIdx.x) >> 4) * 401408) + (((int)blockIdx.x) * 256)) + (((int)threadIdx.x) & 15)) + 12845296))]), 0.000000e+00f);\n}\n", "gridDim": [1568, 1, 1], "blockDim": [512, 1, 1]}