{"parameters": {"input_shape": [128, 84, 83, 83], "output_shape": [128, 84, 42, 42], "window_shape": [3, 3], "window_stride": [2, 2], "padding_below": [1, 1]}, "op_type": "AvgPool", "tvm_func_name": "avg_pooling_128_84_83_83_3_3_2_SAME", "code": "extern \"C\" __global__ void avg_pooling_128_84_83_83_3_3_2_SAME(float* __restrict__ data, float* __restrict__ tensor) {\n  float tensor1[1];\n  tensor1[(0)] = 0.000000e+00f;\n  for (int rv0 = 0; rv0 < 3; ++rv0) {\n    for (int rv1 = 0; rv1 < 3; ++rv1) {\n      tensor1[(0)] = (tensor1[(0)] + (((((1 <= ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 1764) / 42) * 2) + rv0)) && (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 1764) / 42) * 2) + rv0) < 84)) && (1 <= (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 42) * 2) + rv1))) && ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 42) * 2) + rv1) < 84)) ? data[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 1764) * 6889) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 1764) / 42) * 166)) + (rv0 * 83)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 42) * 2)) + rv1) - 84))] : 0.000000e+00f));\n    }\n  }\n  tensor[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (tensor1[(0)] * 1.111111e-01f);\n}\n", "gridDim": [18522, 1, 1], "blockDim": [1024, 1, 1]}