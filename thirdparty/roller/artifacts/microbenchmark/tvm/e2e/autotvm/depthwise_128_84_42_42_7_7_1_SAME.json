{"parameters": {"input_shape": [128, 84, 42, 42], "filter_shape": [84, 1, 7, 7], "output_shape": [128, 84, 42, 42], "window_movement_strides": [1, 1], "padding_below_diff": [3, 3], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "depthwise_128_84_42_42_7_7_1_SAME", "code": "extern \"C\" __global__ void depthwise_128_84_42_42_7_7_1_SAME(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ DepthwiseConv2d) {\n  __shared__ float PaddedInput_shared[2304];\n  __shared__ float placeholder_shared[49];\n  float PaddedInput_shared_local[126];\n  float placeholder_shared_local[49];\n  float DepthwiseConv2d_local[6];\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {\n    if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)) < 2304) {\n      if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 7) + ((int)threadIdx.y)) < 55) {\n        PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)))] = (((((144 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x))) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)) < 2160)) && (3 <= ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)) % 48))) && (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)) % 48) < 45)) ? placeholder[(((((((int)blockIdx.z) * 1764) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)) / 48) * 42)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 294) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)) % 48)) - 129))] : 0.000000e+00f);\n      }\n    }\n  }\n  if (((((int)threadIdx.y) * 6) + (((int)threadIdx.x) / 7)) < 7) {\n    if (((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) < 49) {\n      if (((int)threadIdx.y) < 2) {\n        placeholder_shared[(((((int)threadIdx.y) * 42) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) % 84) * 49) + (((int)threadIdx.y) * 42)) + ((int)threadIdx.x)))];\n      }\n    }\n  }\n  __syncthreads();\n  for (int ax2 = 0; ax2 < 9; ++ax2) {\n    for (int ax3 = 0; ax3 < 7; ++ax3) {\n      PaddedInput_shared_local[(((ax2 * 7) + ax3))] = PaddedInput_shared[(((((((int)threadIdx.y) * 144) + (ax2 * 48)) + ax3) + ((int)threadIdx.x)))];\n      PaddedInput_shared_local[((((ax2 * 7) + ax3) + 63))] = PaddedInput_shared[((((((((int)threadIdx.y) * 144) + (ax2 * 48)) + ax3) + ((int)threadIdx.x)) + 1008))];\n    }\n  }\n  for (int ax21 = 0; ax21 < 7; ++ax21) {\n    for (int ax31 = 0; ax31 < 7; ++ax31) {\n      placeholder_shared_local[(((ax21 * 7) + ax31))] = placeholder_shared[(((ax21 * 7) + ax31))];\n    }\n  }\n  for (int i_c = 0; i_c < 3; ++i_c) {\n    DepthwiseConv2d_local[(i_c)] = 0.000000e+00f;\n    DepthwiseConv2d_local[((i_c + 3))] = 0.000000e+00f;\n    for (int di = 0; di < 7; ++di) {\n      for (int dj = 0; dj < 7; ++dj) {\n        DepthwiseConv2d_local[(i_c)] = (DepthwiseConv2d_local[(i_c)] + (PaddedInput_shared_local[((((i_c * 7) + (di * 7)) + dj))] * placeholder_shared_local[(((di * 7) + dj))]));\n        DepthwiseConv2d_local[((i_c + 3))] = (DepthwiseConv2d_local[((i_c + 3))] + (PaddedInput_shared_local[(((((i_c * 7) + (di * 7)) + dj) + 63))] * placeholder_shared_local[(((di * 7) + dj))]));\n      }\n    }\n  }\n  for (int i_inner_inner_inner = 0; i_inner_inner_inner < 3; ++i_inner_inner_inner) {\n    DepthwiseConv2d[(((((((int)blockIdx.z) * 1764) + (((int)threadIdx.y) * 126)) + (i_inner_inner_inner * 42)) + ((int)threadIdx.x)))] = DepthwiseConv2d_local[(i_inner_inner_inner)];\n    DepthwiseConv2d[((((((((int)blockIdx.z) * 1764) + (((int)threadIdx.y) * 126)) + (i_inner_inner_inner * 42)) + ((int)threadIdx.x)) + 882))] = DepthwiseConv2d_local[((i_inner_inner_inner + 3))];\n  }\n}\n", "gridDim": [1, 1, 10752], "blockDim": [42, 7, 1]}