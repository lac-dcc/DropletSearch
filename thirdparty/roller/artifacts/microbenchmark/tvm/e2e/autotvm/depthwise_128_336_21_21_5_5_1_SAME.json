{"parameters": {"input_shape": [128, 336, 21, 21], "filter_shape": [336, 1, 5, 5], "output_shape": [128, 336, 21, 21], "window_movement_strides": [1, 1], "padding_below_diff": [2, 2], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "depthwise_128_336_21_21_5_5_1_SAME", "code": "extern \"C\" __global__ void depthwise_128_336_21_21_5_5_1_SAME(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ DepthwiseConv2d) {\n  __shared__ float PaddedInput_shared[625];\n  __shared__ float placeholder_shared[25];\n  float PaddedInput_shared_local[55];\n  float placeholder_shared_local[25];\n  float DepthwiseConv2d_local[7];\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 10; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {\n    if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)) < 625) {\n      PaddedInput_shared[((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)))] = (((((50 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x))) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)) < 575)) && (2 <= ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)) % 25))) && (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)) % 25) < 23)) ? placeholder[(((((((int)blockIdx.z) * 441) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)) / 25) * 21)) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 63) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)) % 25)) - 44))] : 0.000000e+00f);\n    }\n  }\n  if (((((int)threadIdx.y) * 21) + ((int)threadIdx.x)) < 25) {\n    if (((int)threadIdx.y) < 2) {\n      placeholder_shared[(((((int)threadIdx.y) * 21) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) % 336) * 25) + (((int)threadIdx.y) * 21)) + ((int)threadIdx.x)))];\n    }\n  }\n  __syncthreads();\n  #pragma unroll\n  for (int ax2 = 0; ax2 < 11; ++ax2) {\n    #pragma unroll\n    for (int ax3 = 0; ax3 < 5; ++ax3) {\n      PaddedInput_shared_local[(((ax2 * 5) + ax3))] = PaddedInput_shared[(((((((int)threadIdx.y) * 175) + (ax2 * 25)) + ax3) + ((int)threadIdx.x)))];\n    }\n  }\n  #pragma unroll\n  for (int ax21 = 0; ax21 < 5; ++ax21) {\n    #pragma unroll\n    for (int ax31 = 0; ax31 < 5; ++ax31) {\n      placeholder_shared_local[(((ax21 * 5) + ax31))] = placeholder_shared[(((ax21 * 5) + ax31))];\n    }\n  }\n  #pragma unroll\n  for (int i_c = 0; i_c < 7; ++i_c) {\n    DepthwiseConv2d_local[(i_c)] = 0.000000e+00f;\n    #pragma unroll\n    for (int di = 0; di < 5; ++di) {\n      #pragma unroll\n      for (int dj = 0; dj < 5; ++dj) {\n        DepthwiseConv2d_local[(i_c)] = (DepthwiseConv2d_local[(i_c)] + (PaddedInput_shared_local[((((i_c * 5) + (di * 5)) + dj))] * placeholder_shared_local[(((di * 5) + dj))]));\n      }\n    }\n  }\n  #pragma unroll\n  for (int i_inner_inner_inner = 0; i_inner_inner_inner < 7; ++i_inner_inner_inner) {\n    DepthwiseConv2d[(((((((int)blockIdx.z) * 441) + (((int)threadIdx.y) * 147)) + (i_inner_inner_inner * 21)) + ((int)threadIdx.x)))] = DepthwiseConv2d_local[(i_inner_inner_inner)];\n  }\n}\n", "gridDim": [1, 1, 43008], "blockDim": [21, 3, 1]}