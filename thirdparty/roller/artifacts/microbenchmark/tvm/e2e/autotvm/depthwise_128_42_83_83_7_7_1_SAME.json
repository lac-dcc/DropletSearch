{"parameters": {"input_shape": [128, 42, 83, 83], "filter_shape": [42, 1, 7, 7], "output_shape": [128, 42, 83, 83], "window_movement_strides": [1, 1], "padding_below_diff": [3, 3], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "depthwise_128_42_83_83_7_7_1_SAME", "code": "extern \"C\" __global__ void depthwise_128_42_83_83_7_7_1_SAME(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ DepthwiseConv2d) {\n  __shared__ float PaddedInput_shared[623];\n  __shared__ float placeholder_shared[49];\n  float PaddedInput_shared_local[49];\n  float placeholder_shared_local[49];\n  float DepthwiseConv2d_local[1];\n  #pragma unroll\n  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 8; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {\n    if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) < 623) {\n      PaddedInput_shared[(((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)))] = (((((3 <= ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) / 89) + ((int)blockIdx.y))) && (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) / 89) + ((int)blockIdx.y)) < 86)) && (3 <= (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) % 89))) && ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) % 89) < 86)) ? placeholder[((((((((int)blockIdx.z) * 6889) + ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) / 89) * 83)) + (((int)blockIdx.y) * 83)) + (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 83) + ((int)threadIdx.x)) % 89)) - 252))] : 0.000000e+00f);\n    }\n  }\n  if (((int)threadIdx.x) < 49) {\n    placeholder_shared[(((int)threadIdx.x))] = placeholder1[((((((int)blockIdx.z) % 42) * 49) + ((int)threadIdx.x)))];\n  }\n  __syncthreads();\n  #pragma unroll\n  for (int ax2 = 0; ax2 < 7; ++ax2) {\n    #pragma unroll\n    for (int ax3 = 0; ax3 < 7; ++ax3) {\n      PaddedInput_shared_local[(((ax2 * 7) + ax3))] = PaddedInput_shared[((((ax2 * 89) + ax3) + ((int)threadIdx.x)))];\n    }\n  }\n  #pragma unroll\n  for (int ax21 = 0; ax21 < 7; ++ax21) {\n    #pragma unroll\n    for (int ax31 = 0; ax31 < 7; ++ax31) {\n      placeholder_shared_local[(((ax21 * 7) + ax31))] = placeholder_shared[(((ax21 * 7) + ax31))];\n    }\n  }\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  #pragma unroll\n  for (int di = 0; di < 7; ++di) {\n    #pragma unroll\n    for (int dj = 0; dj < 7; ++dj) {\n      DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(((di * 7) + dj))] * placeholder_shared_local[(((di * 7) + dj))]));\n    }\n  }\n  DepthwiseConv2d[((((((int)blockIdx.z) * 6889) + (((int)blockIdx.y) * 83)) + ((int)threadIdx.x)))] = DepthwiseConv2d_local[(0)];\n}\n", "gridDim": [1, 83, 5376], "blockDim": [83, 1, 1]}