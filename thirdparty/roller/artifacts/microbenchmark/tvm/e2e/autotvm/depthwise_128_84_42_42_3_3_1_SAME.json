{"parameters": {"input_shape": [128, 84, 42, 42], "filter_shape": [84, 1, 3, 3], "output_shape": [128, 84, 42, 42], "window_movement_strides": [1, 1], "padding_below_diff": [1, 1], "window_dilation_strides": [1, 1]}, "op_type": "DepthwiseConv2dNative", "tvm_func_name": "depthwise_128_84_42_42_3_3_1_SAME", "code": "extern \"C\" __global__ void depthwise_128_84_42_42_3_3_1_SAME(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ DepthwiseConv2d) {\n  __shared__ float PaddedInput_shared[352];\n  __shared__ float placeholder_shared[9];\n  float PaddedInput_shared_local[12];\n  float placeholder_shared_local[9];\n  float DepthwiseConv2d_local[2];\n  PaddedInput_shared[(((((int)threadIdx.y) * 42) + ((int)threadIdx.x)))] = ((((1 <= ((((int)blockIdx.y) * 6) + (((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) / 44))) && (1 <= (((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) % 44))) && ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) % 44) < 43)) ? placeholder[((((((((int)blockIdx.z) * 1764) + (((int)blockIdx.y) * 252)) + ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) / 44) * 42)) + (((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) % 44)) - 43))] : 0.000000e+00f);\n  PaddedInput_shared[((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 126))] = (((1 <= ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 38) % 44)) && (((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 38) % 44) < 43)) ? placeholder[((((((((int)blockIdx.z) * 1764) + (((int)blockIdx.y) * 252)) + (((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 126) / 44) * 42)) + ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 38) % 44)) - 43))] : 0.000000e+00f);\n  if (((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) < 100) {\n    PaddedInput_shared[((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 252))] = ((((((((int)blockIdx.y) * 6) + ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 252) / 44)) < 43) && (1 <= ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 32) % 44))) && (((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 32) % 44) < 43)) ? placeholder[((((((((int)blockIdx.z) * 1764) + (((int)blockIdx.y) * 252)) + (((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 252) / 44) * 42)) + ((((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) + 32) % 44)) - 43))] : 0.000000e+00f);\n  }\n  if (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) / 3)) < 3) {\n    if (((((int)threadIdx.y) * 42) + ((int)threadIdx.x)) < 9) {\n      if (((int)threadIdx.y) < 1) {\n        placeholder_shared[(((((int)threadIdx.y) * 42) + ((int)threadIdx.x)))] = placeholder1[((((((int)threadIdx.y) * 42) + ((((int)blockIdx.z) % 84) * 9)) + ((int)threadIdx.x)))];\n      }\n    }\n  }\n  __syncthreads();\n  PaddedInput_shared_local[(0)] = PaddedInput_shared[(((((int)threadIdx.y) * 88) + ((int)threadIdx.x)))];\n  PaddedInput_shared_local[(1)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 1))];\n  PaddedInput_shared_local[(2)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 2))];\n  PaddedInput_shared_local[(3)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 44))];\n  PaddedInput_shared_local[(4)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 45))];\n  PaddedInput_shared_local[(5)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 46))];\n  PaddedInput_shared_local[(6)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 88))];\n  PaddedInput_shared_local[(7)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 89))];\n  PaddedInput_shared_local[(8)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 90))];\n  PaddedInput_shared_local[(9)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 132))];\n  PaddedInput_shared_local[(10)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 133))];\n  PaddedInput_shared_local[(11)] = PaddedInput_shared[((((((int)threadIdx.y) * 88) + ((int)threadIdx.x)) + 134))];\n  placeholder_shared_local[(0)] = placeholder_shared[(0)];\n  placeholder_shared_local[(1)] = placeholder_shared[(1)];\n  placeholder_shared_local[(2)] = placeholder_shared[(2)];\n  placeholder_shared_local[(3)] = placeholder_shared[(3)];\n  placeholder_shared_local[(4)] = placeholder_shared[(4)];\n  placeholder_shared_local[(5)] = placeholder_shared[(5)];\n  placeholder_shared_local[(6)] = placeholder_shared[(6)];\n  placeholder_shared_local[(7)] = placeholder_shared[(7)];\n  placeholder_shared_local[(8)] = placeholder_shared[(8)];\n  DepthwiseConv2d_local[(0)] = 0.000000e+00f;\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(0)] * placeholder_shared_local[(0)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(1)] * placeholder_shared_local[(1)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(2)] * placeholder_shared_local[(2)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(3)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(4)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(5)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(6)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(7)]));\n  DepthwiseConv2d_local[(0)] = (DepthwiseConv2d_local[(0)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(8)]));\n  DepthwiseConv2d_local[(1)] = 0.000000e+00f;\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(3)] * placeholder_shared_local[(0)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(4)] * placeholder_shared_local[(1)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(5)] * placeholder_shared_local[(2)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(6)] * placeholder_shared_local[(3)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(7)] * placeholder_shared_local[(4)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(8)] * placeholder_shared_local[(5)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(9)] * placeholder_shared_local[(6)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(10)] * placeholder_shared_local[(7)]));\n  DepthwiseConv2d_local[(1)] = (DepthwiseConv2d_local[(1)] + (PaddedInput_shared_local[(11)] * placeholder_shared_local[(8)]));\n  DepthwiseConv2d[(((((((int)blockIdx.z) * 1764) + (((int)blockIdx.y) * 252)) + (((int)threadIdx.y) * 84)) + ((int)threadIdx.x)))] = DepthwiseConv2d_local[(0)];\n  DepthwiseConv2d[((((((((int)blockIdx.z) * 1764) + (((int)blockIdx.y) * 252)) + (((int)threadIdx.y) * 84)) + ((int)threadIdx.x)) + 42))] = DepthwiseConv2d_local[(1)];\n}\n", "gridDim": [1, 7, 10752], "blockDim": [42, 3, 1]}