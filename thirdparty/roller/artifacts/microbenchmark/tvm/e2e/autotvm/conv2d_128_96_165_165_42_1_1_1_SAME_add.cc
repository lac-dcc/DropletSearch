//1_165_128_165_1_1
//128_96_165_165_42_1_1_SAME
//dim3 grid(1, 165, 128);
//dim3 block(165, 1, 1);

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(165) conv_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ input2) {
  float compute[42];
  __shared__ float pad_temp_shared[495];
  __shared__ float placeholder_shared[126];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[((((int)threadIdx.x) * 3))] = placeholder[((((((((int)blockIdx.z) * 2613600) + (rc_outer * 81675)) + ((((int)threadIdx.x) / 55) * 27225)) + (((int)blockIdx.y) * 165)) + ((((int)threadIdx.x) % 55) * 3)))];
    pad_temp_shared[(((((int)threadIdx.x) * 3) + 1))] = placeholder[((((((((int)blockIdx.z) * 2613600) + (rc_outer * 81675)) + ((((((int)threadIdx.x) * 3) + 1) / 165) * 27225)) + (((int)blockIdx.y) * 165)) + (((((int)threadIdx.x) * 3) + 1) % 165)))];
    pad_temp_shared[(((((int)threadIdx.x) * 3) + 2))] = placeholder[((((((((int)blockIdx.z) * 2613600) + (rc_outer * 81675)) + ((((((int)threadIdx.x) * 3) + 2) / 165) * 27225)) + (((int)blockIdx.y) * 165)) + (((((int)threadIdx.x) * 3) + 2) % 165)))];
    if (((int)threadIdx.x) < 126) {
      placeholder_shared[(((int)threadIdx.x))] = placeholder1[(((((((int)threadIdx.x) / 3) * 96) + (rc_outer * 3)) + (((int)threadIdx.x) % 3)))];
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(0)]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(6)]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(12)]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(18)]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(24)]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(30)]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(36)]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(42)]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(48)]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(54)]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(60)]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(66)]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(72)]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(78)]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(84)]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(90)]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(96)]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(102)]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(108)]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(114)]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(120)]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(3)]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(9)]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(15)]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(21)]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(27)]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(33)]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(39)]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(45)]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(51)]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(57)]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(63)]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(69)]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(75)]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(81)]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(87)]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(93)]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(99)]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(105)]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(111)]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(117)]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(123)]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(1)]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(7)]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(13)]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(19)]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(25)]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(31)]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(37)]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(43)]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(49)]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(55)]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(61)]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(67)]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(73)]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(79)]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(85)]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(91)]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(97)]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(103)]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(109)]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(115)]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(121)]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(4)]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(10)]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(16)]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(22)]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(28)]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(34)]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(40)]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(46)]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(52)]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(58)]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(64)]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(70)]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(76)]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(82)]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(88)]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(94)]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(100)]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(106)]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(112)]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(118)]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 165))] * placeholder_shared[(124)]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(2)]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(8)]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(14)]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(20)]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(26)]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(32)]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(38)]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(44)]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(50)]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(56)]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(62)]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(68)]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(74)]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(80)]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(86)]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(92)]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(98)]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(104)]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(110)]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(116)]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(122)]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(5)]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(11)]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(17)]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(23)]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(29)]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(35)]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(41)]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(47)]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(53)]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(59)]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(65)]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(71)]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(77)]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(83)]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(89)]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(95)]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(101)]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(107)]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(113)]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(119)]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[((((int)threadIdx.x) + 330))] * placeholder_shared[(125)]));
  }
  T_add[((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)))] = (compute[(0)] + input2[((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 54450))] = (compute[(2)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 54450))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 108900))] = (compute[(4)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 108900))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 163350))] = (compute[(6)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 163350))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 217800))] = (compute[(8)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 217800))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 272250))] = (compute[(10)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 272250))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 326700))] = (compute[(12)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 326700))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 381150))] = (compute[(14)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 381150))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 435600))] = (compute[(16)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 435600))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 490050))] = (compute[(18)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 490050))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 544500))] = (compute[(20)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 544500))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 598950))] = (compute[(22)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 598950))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 653400))] = (compute[(24)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 653400))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 707850))] = (compute[(26)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 707850))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 762300))] = (compute[(28)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 762300))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 816750))] = (compute[(30)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 816750))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 871200))] = (compute[(32)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 871200))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 925650))] = (compute[(34)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 925650))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 980100))] = (compute[(36)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 980100))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1034550))] = (compute[(38)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1034550))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1089000))] = (compute[(40)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1089000))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 27225))] = (compute[(1)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 27225))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 81675))] = (compute[(3)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 81675))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 136125))] = (compute[(5)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 136125))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 190575))] = (compute[(7)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 190575))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 245025))] = (compute[(9)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 245025))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 299475))] = (compute[(11)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 299475))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 353925))] = (compute[(13)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 353925))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 408375))] = (compute[(15)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 408375))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 462825))] = (compute[(17)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 462825))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 517275))] = (compute[(19)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 517275))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 571725))] = (compute[(21)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 571725))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 626175))] = (compute[(23)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 626175))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 680625))] = (compute[(25)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 680625))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 735075))] = (compute[(27)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 735075))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 789525))] = (compute[(29)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 789525))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 843975))] = (compute[(31)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 843975))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 898425))] = (compute[(33)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 898425))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 952875))] = (compute[(35)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 952875))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1007325))] = (compute[(37)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1007325))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1061775))] = (compute[(39)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1061775))]);
  T_add[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1116225))] = (compute[(41)] + input2[(((((((int)blockIdx.z) * 1143450) + (((int)blockIdx.y) * 165)) + ((int)threadIdx.x)) + 1116225))]);
}

