//7168_1_1_112_1_1
//128_256_56_56_64_1_1_SAME
//dim3 grid(7168, 1, 1);
//dim3 block(112, 1, 1);

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(112) default_function_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ compute, float* __restrict__ input2) {
  float compute1[32];
  __shared__ float pad_temp_shared[448];
  __shared__ float input1_shared[512];
  compute1[(0)] = 0.000000e+00f;
  compute1[(16)] = 0.000000e+00f;
  compute1[(1)] = 0.000000e+00f;
  compute1[(17)] = 0.000000e+00f;
  compute1[(2)] = 0.000000e+00f;
  compute1[(18)] = 0.000000e+00f;
  compute1[(3)] = 0.000000e+00f;
  compute1[(19)] = 0.000000e+00f;
  compute1[(8)] = 0.000000e+00f;
  compute1[(24)] = 0.000000e+00f;
  compute1[(9)] = 0.000000e+00f;
  compute1[(25)] = 0.000000e+00f;
  compute1[(10)] = 0.000000e+00f;
  compute1[(26)] = 0.000000e+00f;
  compute1[(11)] = 0.000000e+00f;
  compute1[(27)] = 0.000000e+00f;
  compute1[(4)] = 0.000000e+00f;
  compute1[(20)] = 0.000000e+00f;
  compute1[(5)] = 0.000000e+00f;
  compute1[(21)] = 0.000000e+00f;
  compute1[(6)] = 0.000000e+00f;
  compute1[(22)] = 0.000000e+00f;
  compute1[(7)] = 0.000000e+00f;
  compute1[(23)] = 0.000000e+00f;
  compute1[(12)] = 0.000000e+00f;
  compute1[(28)] = 0.000000e+00f;
  compute1[(13)] = 0.000000e+00f;
  compute1[(29)] = 0.000000e+00f;
  compute1[(14)] = 0.000000e+00f;
  compute1[(30)] = 0.000000e+00f;
  compute1[(15)] = 0.000000e+00f;
  compute1[(31)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.x))] = input0[(((((((((((int)blockIdx.x) / 112) * 1605632) + (rc_outer_outer * 25088)) + ((((int)threadIdx.x) / 28) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))];
    pad_temp_shared[((((int)threadIdx.x) + 112))] = input0[((((((((((((int)blockIdx.x) / 112) * 1605632) + (rc_outer_outer * 25088)) + ((((int)threadIdx.x) / 28) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 12544))];
    pad_temp_shared[((((int)threadIdx.x) + 224))] = input0[((((((((((((int)blockIdx.x) / 112) * 1605632) + (rc_outer_outer * 25088)) + ((((int)threadIdx.x) / 28) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 802816))];
    pad_temp_shared[((((int)threadIdx.x) + 336))] = input0[((((((((((((int)blockIdx.x) / 112) * 1605632) + (((((int)threadIdx.x) + 336) / 224) * 802816)) + (rc_outer_outer * 25088)) + (((((int)threadIdx.x) / 28) + 4) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))];
    input1_shared[(((int)threadIdx.x))] = input1[(((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)))];
    input1_shared[((((int)threadIdx.x) + 112))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 3584))];
    input1_shared[((((int)threadIdx.x) + 224))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 7168))];
    input1_shared[((((int)threadIdx.x) + 336))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 10752))];
    if (((int)threadIdx.x) < 64) {
      input1_shared[((((int)threadIdx.x) + 448))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 14336))];
    }
    __syncthreads();
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[(((((int)threadIdx.x) / 28) * 64))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 256))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 8))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 264))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 16))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 272))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 24))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 280))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[(((((int)threadIdx.x) / 28) * 64))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 256))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 8))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 264))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 16))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 272))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 24))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 280))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 32))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 288))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 40))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 296))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 48))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 304))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 56))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 312))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 32))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 288))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 40))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 296))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 48))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 304))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 56))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 312))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 1))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 257))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 9))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 265))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 17))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 273))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 25))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 281))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 1))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 257))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 9))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 265))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 17))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 273))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 25))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 281))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 33))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 289))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 41))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 297))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 49))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 305))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 57))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 313))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 33))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 289))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 41))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 297))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 49))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 305))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 57))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 313))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 2))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 258))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 10))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 266))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 18))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 274))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 26))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 282))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 2))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 258))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 10))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 266))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 18))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 274))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 26))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 282))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 34))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 290))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 42))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 298))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 50))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 306))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 58))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 314))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 34))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 290))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 42))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 298))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 50))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 306))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 58))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 314))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 3))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 259))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 11))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 267))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 19))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 275))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 27))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 283))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 3))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 259))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 11))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 267))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 19))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 275))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 27))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 283))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 35))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 291))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 43))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 299))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 51))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 307))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 59))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 315))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 35))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 291))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 43))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 299))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 51))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 307))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 59))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 315))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 4))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 260))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 12))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 268))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 20))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 276))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 28))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 284))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 4))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 260))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 12))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 268))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 20))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 276))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 28))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 284))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 36))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 292))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 44))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 300))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 52))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 308))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 60))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 316))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 36))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 292))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 44))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 300))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 52))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 308))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 60))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 316))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 5))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 261))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 13))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 269))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 21))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 277))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 29))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 285))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 5))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 261))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 13))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 269))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 21))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 277))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 29))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 285))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 37))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 293))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 45))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 301))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 53))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 309))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 61))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 317))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 37))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 293))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 45))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 301))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 53))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 309))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 61))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 317))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 6))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 262))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 14))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 270))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 22))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 278))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 30))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 286))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 6))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 262))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 14))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 270))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 22))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 278))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 30))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 286))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 38))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 294))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 46))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 302))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 54))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 310))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 62))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 318))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 38))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 294))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 46))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 302))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 54))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 310))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 62))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 318))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 7))]));
    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 263))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 15))]));
    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 271))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 23))]));
    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 279))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 31))]));
    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 287))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 7))]));
    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 263))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 15))]));
    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 271))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 23))]));
    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 279))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 31))]));
    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 287))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 39))]));
    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 295))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 47))]));
    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 303))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 55))]));
    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 311))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 63))]));
    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 319))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 39))]));
    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 295))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 47))]));
    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 303))]));
    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 55))]));
    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 311))]));
    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 63))]));
    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 319))]));
  }
  for (int i0_inner = 0; i0_inner < 2; ++i0_inner) {
    for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {
      compute[((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))] = max((compute1[(((i0_inner * 8) + i1_inner))] + input2[((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);
      compute[(((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 100352))] = max((compute1[((((i0_inner * 8) + i1_inner) + 16))] + input2[(((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 100352))]), 0.000000e+00f);
    }
  }
}

