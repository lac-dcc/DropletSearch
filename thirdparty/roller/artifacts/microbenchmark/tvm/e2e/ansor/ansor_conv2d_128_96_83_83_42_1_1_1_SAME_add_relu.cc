//5312_1_1_498_1_1
//128_96_83_83_42_1_1_SAME
//dim3 grid(5312, 1, 1);
//dim3 block(498, 1, 1);

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(498) default_function_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ compute, float* __restrict__ input2) {
  float compute1[14];
  __shared__ float pad_temp_shared[3984];
  __shared__ float input1_shared[1008];
  compute1[(0)] = 0.000000e+00f;
  compute1[(7)] = 0.000000e+00f;
  compute1[(1)] = 0.000000e+00f;
  compute1[(8)] = 0.000000e+00f;
  compute1[(2)] = 0.000000e+00f;
  compute1[(9)] = 0.000000e+00f;
  compute1[(3)] = 0.000000e+00f;
  compute1[(10)] = 0.000000e+00f;
  compute1[(4)] = 0.000000e+00f;
  compute1[(11)] = 0.000000e+00f;
  compute1[(5)] = 0.000000e+00f;
  compute1[(12)] = 0.000000e+00f;
  compute1[(6)] = 0.000000e+00f;
  compute1[(13)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 4; ++rc_outer_outer) {
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.x))] = input0[(((((((((int)blockIdx.x) / 83) * 1322688) + (rc_outer_outer * 165336)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];
    pad_temp_shared[((((int)threadIdx.x) + 498))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (rc_outer_outer * 165336)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 41334))];
    pad_temp_shared[((((int)threadIdx.x) + 996))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (rc_outer_outer * 165336)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 82668))];
    pad_temp_shared[((((int)threadIdx.x) + 1494))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (rc_outer_outer * 165336)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 124002))];
    pad_temp_shared[((((int)threadIdx.x) + 1992))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (rc_outer_outer * 165336)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 661344))];
    pad_temp_shared[((((int)threadIdx.x) + 2490))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (((((int)threadIdx.x) + 2490) / 1992) * 661344)) + (rc_outer_outer * 165336)) + (((((int)threadIdx.x) / 83) + 6) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];
    pad_temp_shared[((((int)threadIdx.x) + 2988))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (((((int)threadIdx.x) + 2988) / 1992) * 661344)) + (rc_outer_outer * 165336)) + (((((int)threadIdx.x) / 83) + 12) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];
    pad_temp_shared[((((int)threadIdx.x) + 3486))] = input0[((((((((((int)blockIdx.x) / 83) * 1322688) + (((((int)threadIdx.x) + 3486) / 1992) * 661344)) + (rc_outer_outer * 165336)) + (((((int)threadIdx.x) / 83) + 18) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];
    if (((int)threadIdx.x) < 336) {
      input1_shared[((((int)threadIdx.x) * 3))] = input1[(((((((int)threadIdx.x) >> 3) * 96) + (rc_outer_outer * 24)) + ((((int)threadIdx.x) & 7) * 3)))];
    }
    if (((int)threadIdx.x) < 336) {
      input1_shared[(((((int)threadIdx.x) * 3) + 1))] = input1[(((((((((int)threadIdx.x) * 3) + 1) / 24) * 96) + (rc_outer_outer * 24)) + (((((int)threadIdx.x) * 3) + 1) % 24)))];
    }
    if (((int)threadIdx.x) < 336) {
      input1_shared[(((((int)threadIdx.x) * 3) + 2))] = input1[(((((((((int)threadIdx.x) * 3) + 2) / 24) * 96) + (rc_outer_outer * 24)) + (((((int)threadIdx.x) * 3) + 2) % 24)))];
    }
    __syncthreads();
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[(((((int)threadIdx.x) / 83) * 168))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[(((((int)threadIdx.x) / 83) * 168))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 24))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 24))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 48))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 48))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 72))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 72))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 96))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 96))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 120))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 120))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[((((int)threadIdx.x) % 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 144))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1992))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 144))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 1))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 1))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 25))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 25))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 49))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 49))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 73))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 73))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 97))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 97))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 121))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 121))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 83))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 145))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2075))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 145))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 2))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 2))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 26))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 26))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 50))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 50))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 74))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 74))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 98))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 98))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 122))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 122))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 166))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 146))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2158))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 146))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 3))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 3))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 27))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 27))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 51))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 51))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 75))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 75))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 99))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 99))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 123))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 123))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 249))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 147))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2241))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 147))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 4))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 4))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 28))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 28))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 52))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 52))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 76))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 76))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 100))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 100))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 124))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 124))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 332))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 148))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2324))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 148))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 5))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 5))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 29))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 29))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 53))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 53))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 77))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 77))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 101))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 101))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 125))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 125))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 415))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 149))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2407))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 149))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 6))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 6))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 30))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 30))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 54))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 54))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 78))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 78))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 102))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 102))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 126))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 126))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 498))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 150))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2490))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 150))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 7))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 7))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 31))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 31))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 55))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 55))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 79))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 79))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 103))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 103))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 127))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 127))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 581))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 151))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2573))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 151))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 8))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 8))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 32))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 32))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 56))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 56))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 80))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 80))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 104))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 104))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 128))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 128))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 664))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 152))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2656))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 152))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 9))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 9))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 33))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 33))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 57))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 57))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 81))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 81))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 105))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 105))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 129))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 129))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 747))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 153))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2739))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 153))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 10))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 10))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 34))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 34))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 58))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 58))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 82))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 82))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 106))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 106))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 130))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 130))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 830))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 154))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2822))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 154))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 11))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 11))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 35))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 35))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 59))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 59))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 83))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 83))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 107))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 107))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 131))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 131))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 913))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 155))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2905))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 155))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 12))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 12))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 36))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 36))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 60))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 60))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 84))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 84))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 108))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 108))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 132))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 132))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 996))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 156))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 2988))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 156))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 13))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 13))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 37))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 37))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 61))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 61))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 85))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 85))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 109))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 109))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 133))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 133))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1079))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 157))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3071))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 157))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 14))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 14))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 38))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 38))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 62))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 62))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 86))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 86))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 110))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 110))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 134))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 134))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1162))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 158))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3154))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 158))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 15))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 15))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 39))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 39))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 63))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 63))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 87))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 87))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 111))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 111))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 135))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 135))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1245))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 159))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3237))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 159))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 16))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 16))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 40))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 40))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 64))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 64))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 88))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 88))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 112))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 112))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 136))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 136))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1328))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 160))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3320))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 160))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 17))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 17))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 41))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 41))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 65))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 65))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 89))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 89))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 113))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 113))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 137))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 137))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1411))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 161))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3403))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 161))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 18))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 18))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 42))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 42))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 66))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 66))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 90))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 90))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 114))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 114))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 138))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 138))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1494))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 162))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3486))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 162))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 19))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 19))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 43))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 43))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 67))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 67))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 91))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 91))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 115))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 115))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 139))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 139))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1577))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 163))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3569))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 163))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 20))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 20))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 44))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 44))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 68))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 68))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 92))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 92))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 116))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 116))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 140))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 140))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1660))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 164))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3652))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 164))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 21))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 21))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 45))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 45))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 69))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 69))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 93))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 93))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 117))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 117))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 141))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 141))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1743))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 165))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3735))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 165))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 22))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 22))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 46))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 46))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 70))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 70))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 94))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 94))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 118))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 118))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 142))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 142))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1826))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 166))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3818))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 166))]));
    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 23))]));
    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 23))]));
    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 47))]));
    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 47))]));
    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 71))]));
    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 71))]));
    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 95))]));
    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 95))]));
    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 119))]));
    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 119))]));
    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 143))]));
    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 143))]));
    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 1909))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 167))]));
    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 83) + 3901))] * input1_shared[((((((int)threadIdx.x) / 83) * 168) + 167))]));
  }
  for (int i0_inner = 0; i0_inner < 2; ++i0_inner) {
    for (int i1_inner = 0; i1_inner < 7; ++i1_inner) {
      compute[((((((((((int)blockIdx.x) / 83) * 578676) + (i0_inner * 289338)) + ((((int)threadIdx.x) / 83) * 48223)) + (i1_inner * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))] = max((compute1[(((i0_inner * 7) + i1_inner))] + input2[((((((((((int)blockIdx.x) / 83) * 578676) + (i0_inner * 289338)) + ((((int)threadIdx.x) / 83) * 48223)) + (i1_inner * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))]), 0.000000e+00f);
    }
  }
}

