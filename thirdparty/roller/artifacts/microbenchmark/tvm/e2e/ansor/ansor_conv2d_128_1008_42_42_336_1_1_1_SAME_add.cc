//6272_1_1_126_1_1
//128_1008_42_42_336_1_1_SAME
//dim3 grid(6272, 1, 1);
//dim3 block(126, 1, 1);

#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(126) default_function_kernel0(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ T_add, float* __restrict__ input2) {
  float compute[96];
  __shared__ float pad_temp_shared[216];
  __shared__ float input1_shared[504];
  compute[(0)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(32)] = 0.000000e+00f;
  compute[(48)] = 0.000000e+00f;
  compute[(64)] = 0.000000e+00f;
  compute[(80)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(33)] = 0.000000e+00f;
  compute[(49)] = 0.000000e+00f;
  compute[(65)] = 0.000000e+00f;
  compute[(81)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(34)] = 0.000000e+00f;
  compute[(50)] = 0.000000e+00f;
  compute[(66)] = 0.000000e+00f;
  compute[(82)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(35)] = 0.000000e+00f;
  compute[(51)] = 0.000000e+00f;
  compute[(67)] = 0.000000e+00f;
  compute[(83)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(36)] = 0.000000e+00f;
  compute[(52)] = 0.000000e+00f;
  compute[(68)] = 0.000000e+00f;
  compute[(84)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(37)] = 0.000000e+00f;
  compute[(53)] = 0.000000e+00f;
  compute[(69)] = 0.000000e+00f;
  compute[(85)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(38)] = 0.000000e+00f;
  compute[(54)] = 0.000000e+00f;
  compute[(70)] = 0.000000e+00f;
  compute[(86)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(39)] = 0.000000e+00f;
  compute[(55)] = 0.000000e+00f;
  compute[(71)] = 0.000000e+00f;
  compute[(87)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(40)] = 0.000000e+00f;
  compute[(56)] = 0.000000e+00f;
  compute[(72)] = 0.000000e+00f;
  compute[(88)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(41)] = 0.000000e+00f;
  compute[(57)] = 0.000000e+00f;
  compute[(73)] = 0.000000e+00f;
  compute[(89)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(42)] = 0.000000e+00f;
  compute[(58)] = 0.000000e+00f;
  compute[(74)] = 0.000000e+00f;
  compute[(90)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(43)] = 0.000000e+00f;
  compute[(59)] = 0.000000e+00f;
  compute[(75)] = 0.000000e+00f;
  compute[(91)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(44)] = 0.000000e+00f;
  compute[(60)] = 0.000000e+00f;
  compute[(76)] = 0.000000e+00f;
  compute[(92)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(45)] = 0.000000e+00f;
  compute[(61)] = 0.000000e+00f;
  compute[(77)] = 0.000000e+00f;
  compute[(93)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(46)] = 0.000000e+00f;
  compute[(62)] = 0.000000e+00f;
  compute[(78)] = 0.000000e+00f;
  compute[(94)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  compute[(47)] = 0.000000e+00f;
  compute[(63)] = 0.000000e+00f;
  compute[(79)] = 0.000000e+00f;
  compute[(95)] = 0.000000e+00f;
  for (int rc_outer_outer = 0; rc_outer_outer < 336; ++rc_outer_outer) {
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.x))] = input0[((((((((((((int)blockIdx.x) / 196) * 7112448) + ((((int)threadIdx.x) / 54) * 1778112)) + (rc_outer_outer * 5292)) + (((((int)threadIdx.x) % 54) / 18) * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + (((((int)threadIdx.x) % 18) / 6) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + (((int)threadIdx.x) % 6)))];
    if (((int)threadIdx.x) < 90) {
      pad_temp_shared[((((int)threadIdx.x) + 126))] = input0[((((((((((((int)blockIdx.x) / 196) * 7112448) + (((((int)threadIdx.x) + 126) / 54) * 1778112)) + (rc_outer_outer * 5292)) + ((((((int)threadIdx.x) / 18) + 1) % 3) * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + (((((int)threadIdx.x) % 18) / 6) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + (((int)threadIdx.x) % 6)))];
    }
    input1_shared[(((int)threadIdx.x))] = input1[(((((((((int)blockIdx.x) % 196) / 98) * 169344) + ((((int)threadIdx.x) / 3) * 1008)) + (rc_outer_outer * 3)) + (((int)threadIdx.x) % 3)))];
    input1_shared[((((int)threadIdx.x) + 126))] = input1[((((((((((int)blockIdx.x) % 196) / 98) * 169344) + ((((int)threadIdx.x) / 3) * 1008)) + (rc_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 42336))];
    input1_shared[((((int)threadIdx.x) + 252))] = input1[((((((((((int)blockIdx.x) % 196) / 98) * 169344) + ((((int)threadIdx.x) / 3) * 1008)) + (rc_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 84672))];
    input1_shared[((((int)threadIdx.x) + 378))] = input1[((((((((((int)blockIdx.x) % 196) / 98) * 169344) + ((((int)threadIdx.x) / 3) * 1008)) + (rc_outer_outer * 3)) + (((int)threadIdx.x) % 3)) + 127008))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(64)] = (compute[(64)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(80)] = (compute[(80)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(65)] = (compute[(65)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(81)] = (compute[(81)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(66)] = (compute[(66)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(82)] = (compute[(82)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(67)] = (compute[(67)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(83)] = (compute[(83)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(68)] = (compute[(68)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(84)] = (compute[(84)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(69)] = (compute[(69)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(85)] = (compute[(85)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(70)] = (compute[(70)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(86)] = (compute[(86)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 1))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 2))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 3))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(71)] = (compute[(71)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 4))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(87)] = (compute[(87)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 5))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(56)] = (compute[(56)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(72)] = (compute[(72)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(88)] = (compute[(88)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[((((((int)threadIdx.x) % 63) / 3) * 24))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(57)] = (compute[(57)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(73)] = (compute[(73)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(89)] = (compute[(89)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 3))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(58)] = (compute[(58)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(74)] = (compute[(74)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(90)] = (compute[(90)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 6))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(59)] = (compute[(59)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(75)] = (compute[(75)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(91)] = (compute[(91)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 9))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(60)] = (compute[(60)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(76)] = (compute[(76)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(92)] = (compute[(92)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 12))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(61)] = (compute[(61)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(77)] = (compute[(77)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(93)] = (compute[(93)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 15))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(62)] = (compute[(62)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(78)] = (compute[(78)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(94)] = (compute[(94)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 18))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 54))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 55))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 56))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(63)] = (compute[(63)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 57))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(79)] = (compute[(79)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 58))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(95)] = (compute[(95)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 59))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 21))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(64)] = (compute[(64)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(80)] = (compute[(80)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(65)] = (compute[(65)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(81)] = (compute[(81)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(66)] = (compute[(66)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(82)] = (compute[(82)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(67)] = (compute[(67)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(83)] = (compute[(83)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(68)] = (compute[(68)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(84)] = (compute[(84)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(69)] = (compute[(69)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(85)] = (compute[(85)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(70)] = (compute[(70)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(86)] = (compute[(86)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 18))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 19))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 20))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 21))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(71)] = (compute[(71)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 22))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(87)] = (compute[(87)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 23))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(56)] = (compute[(56)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(72)] = (compute[(72)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(88)] = (compute[(88)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 1))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(57)] = (compute[(57)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(73)] = (compute[(73)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(89)] = (compute[(89)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 4))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(58)] = (compute[(58)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(74)] = (compute[(74)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(90)] = (compute[(90)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 7))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(59)] = (compute[(59)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(75)] = (compute[(75)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(91)] = (compute[(91)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 10))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(60)] = (compute[(60)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(76)] = (compute[(76)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(92)] = (compute[(92)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 13))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(61)] = (compute[(61)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(77)] = (compute[(77)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(93)] = (compute[(93)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 16))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(62)] = (compute[(62)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(78)] = (compute[(78)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(94)] = (compute[(94)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 19))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 72))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 73))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 74))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(63)] = (compute[(63)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 75))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(79)] = (compute[(79)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 76))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(95)] = (compute[(95)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 77))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 22))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(16)] = (compute[(16)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(32)] = (compute[(32)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(48)] = (compute[(48)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(64)] = (compute[(64)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(80)] = (compute[(80)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(33)] = (compute[(33)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(49)] = (compute[(49)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(65)] = (compute[(65)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(81)] = (compute[(81)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(34)] = (compute[(34)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(50)] = (compute[(50)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(66)] = (compute[(66)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(82)] = (compute[(82)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(35)] = (compute[(35)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(51)] = (compute[(51)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(67)] = (compute[(67)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(83)] = (compute[(83)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(20)] = (compute[(20)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(36)] = (compute[(36)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(52)] = (compute[(52)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(68)] = (compute[(68)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(84)] = (compute[(84)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(37)] = (compute[(37)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(53)] = (compute[(53)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(69)] = (compute[(69)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(85)] = (compute[(85)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(38)] = (compute[(38)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(54)] = (compute[(54)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(70)] = (compute[(70)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(86)] = (compute[(86)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 36))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 37))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(39)] = (compute[(39)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 38))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(55)] = (compute[(55)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 39))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(71)] = (compute[(71)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 40))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(87)] = (compute[(87)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 41))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(24)] = (compute[(24)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(40)] = (compute[(40)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(56)] = (compute[(56)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(72)] = (compute[(72)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(88)] = (compute[(88)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 2))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(41)] = (compute[(41)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(57)] = (compute[(57)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(73)] = (compute[(73)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(89)] = (compute[(89)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 5))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(42)] = (compute[(42)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(58)] = (compute[(58)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(74)] = (compute[(74)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(90)] = (compute[(90)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 8))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(43)] = (compute[(43)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(59)] = (compute[(59)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(75)] = (compute[(75)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(91)] = (compute[(91)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 11))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(28)] = (compute[(28)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(44)] = (compute[(44)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(60)] = (compute[(60)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(76)] = (compute[(76)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(92)] = (compute[(92)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 14))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(45)] = (compute[(45)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(61)] = (compute[(61)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(77)] = (compute[(77)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(93)] = (compute[(93)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 17))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(46)] = (compute[(46)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(62)] = (compute[(62)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(78)] = (compute[(78)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(94)] = (compute[(94)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 20))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 90))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 91))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(47)] = (compute[(47)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 92))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(63)] = (compute[(63)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 93))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(79)] = (compute[(79)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 94))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
    compute[(95)] = (compute[(95)] + (pad_temp_shared[(((((((int)threadIdx.x) / 63) * 108) + ((((int)threadIdx.x) % 3) * 6)) + 95))] * input1_shared[(((((((int)threadIdx.x) % 63) / 3) * 24) + 23))]));
  }
  for (int ax0_inner = 0; ax0_inner < 2; ++ax0_inner) {
    for (int ax1_inner = 0; ax1_inner < 8; ++ax1_inner) {
      T_add[(((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)))] = (compute[(((ax0_inner * 8) + ax1_inner))] + input2[(((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)))]);
      T_add[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 1))] = (compute[((((ax0_inner * 8) + ax1_inner) + 16))] + input2[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 1))]);
      T_add[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 2))] = (compute[((((ax0_inner * 8) + ax1_inner) + 32))] + input2[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 2))]);
      T_add[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 3))] = (compute[((((ax0_inner * 8) + ax1_inner) + 48))] + input2[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 3))]);
      T_add[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 4))] = (compute[((((ax0_inner * 8) + ax1_inner) + 64))] + input2[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 4))]);
      T_add[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 5))] = (compute[((((ax0_inner * 8) + ax1_inner) + 80))] + input2[((((((((((((((int)blockIdx.x) / 196) * 2370816) + ((((int)threadIdx.x) / 63) * 1185408)) + (ax0_inner * 592704)) + (((((int)blockIdx.x) % 196) / 98) * 296352)) + (((((int)threadIdx.x) % 63) / 3) * 14112)) + (ax1_inner * 1764)) + (((((int)blockIdx.x) % 98) / 7) * 126)) + ((((int)threadIdx.x) % 3) * 42)) + ((((int)blockIdx.x) % 7) * 6)) + 5))]);
    }
  }
}

