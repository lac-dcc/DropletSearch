{"parameters": {"input_shape": [128, 96, 83, 83], "filter_shape": [42, 96, 1, 1], "output_shape": [128, 42, 83, 83], "window_movement_strides": [1, 1], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "Convolution", "tvm_func_name": "ansor_conv2d_128_96_83_83_42_1_1_1_SAME", "code": "extern \"C\" __global__ void ansor_conv2d_128_96_83_83_42_1_1_1_SAME(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ compute) {\n  float compute_local[56];\n  __shared__ float pad_temp_shared[3984];\n  __shared__ float input1_shared[504];\n  for (int nn_c_outer_inner_init = 0; nn_c_outer_inner_init < 2; ++nn_c_outer_inner_init) {\n    for (int ff_c_outer_inner_init = 0; ff_c_outer_inner_init < 7; ++ff_c_outer_inner_init) {\n      compute_local[(((nn_c_outer_inner_init * 14) + ff_c_outer_inner_init))] = 0.000000e+00f;\n      compute_local[((((nn_c_outer_inner_init * 14) + ff_c_outer_inner_init) + 28))] = 0.000000e+00f;\n      compute_local[((((nn_c_outer_inner_init * 14) + ff_c_outer_inner_init) + 7))] = 0.000000e+00f;\n      compute_local[((((nn_c_outer_inner_init * 14) + ff_c_outer_inner_init) + 35))] = 0.000000e+00f;\n    }\n  }\n  for (int rc_outer_outer = 0; rc_outer_outer < 8; ++rc_outer_outer) {\n    __syncthreads();\n    pad_temp_shared[(((int)threadIdx.x))] = input0[(((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 249))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 20667))];\n    pad_temp_shared[((((int)threadIdx.x) + 498))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 41334))];\n    pad_temp_shared[((((int)threadIdx.x) + 747))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 62001))];\n    pad_temp_shared[((((int)threadIdx.x) + 996))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 661344))];\n    pad_temp_shared[((((int)threadIdx.x) + 1245))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 1245) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 3) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 1494))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 1494) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 6) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 1743))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 1743) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 9) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 1992))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 1322688))];\n    pad_temp_shared[((((int)threadIdx.x) + 2241))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 2241) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 3) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 2490))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 2490) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 6) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 2739))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 2739) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 9) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 2988))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (rc_outer_outer * 82668)) + ((((int)threadIdx.x) / 83) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 1984032))];\n    pad_temp_shared[((((int)threadIdx.x) + 3237))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 3237) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 3) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 3486))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 3486) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 6) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    pad_temp_shared[((((int)threadIdx.x) + 3735))] = input0[((((((((((int)blockIdx.x) / 83) * 2645376) + (((((int)threadIdx.x) + 3735) / 996) * 661344)) + (rc_outer_outer * 82668)) + (((((int)threadIdx.x) / 83) + 9) * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))];\n    input1_shared[(((int)threadIdx.x))] = input1[(((((((int)threadIdx.x) / 12) * 96) + (rc_outer_outer * 12)) + (((int)threadIdx.x) % 12)))];\n    input1_shared[((((int)threadIdx.x) + 249))] = input1[((((((((int)threadIdx.x) + 249) / 12) * 96) + (rc_outer_outer * 12)) + ((((int)threadIdx.x) + 9) % 12)))];\n    if (((int)threadIdx.x) < 6) {\n      input1_shared[((((int)threadIdx.x) + 498))] = input1[((((((((int)threadIdx.x) + 498) / 12) * 96) + (rc_outer_outer * 12)) + (((int)threadIdx.x) + 6)))];\n    }\n    __syncthreads();\n    for (int rc_outer_inner = 0; rc_outer_inner < 2; ++rc_outer_inner) {\n      for (int nn_c_outer_inner = 0; nn_c_outer_inner < 2; ++nn_c_outer_inner) {\n        for (int ff_c_outer_inner = 0; ff_c_outer_inner < 7; ++ff_c_outer_inner) {\n          for (int rc_inner = 0; rc_inner < 6; ++rc_inner) {\n            compute_local[(((nn_c_outer_inner * 14) + ff_c_outer_inner))] = (compute_local[(((nn_c_outer_inner * 14) + ff_c_outer_inner))] + (pad_temp_shared[(((((nn_c_outer_inner * 1992) + (rc_outer_inner * 498)) + (rc_inner * 83)) + (((int)threadIdx.x) % 83)))] * input1_shared[((((((((int)threadIdx.x) / 83) * 84) + (ff_c_outer_inner * 12)) + (rc_outer_inner * 6)) + rc_inner))]));\n            compute_local[((((nn_c_outer_inner * 14) + ff_c_outer_inner) + 28))] = (compute_local[((((nn_c_outer_inner * 14) + ff_c_outer_inner) + 28))] + (pad_temp_shared[(((((nn_c_outer_inner * 1992) + (rc_outer_inner * 498)) + (rc_inner * 83)) + (((int)threadIdx.x) % 83)))] * input1_shared[(((((((((int)threadIdx.x) / 83) * 84) + (ff_c_outer_inner * 12)) + (rc_outer_inner * 6)) + rc_inner) + 252))]));\n            compute_local[((((nn_c_outer_inner * 14) + ff_c_outer_inner) + 7))] = (compute_local[((((nn_c_outer_inner * 14) + ff_c_outer_inner) + 7))] + (pad_temp_shared[((((((nn_c_outer_inner * 1992) + (rc_outer_inner * 498)) + (rc_inner * 83)) + (((int)threadIdx.x) % 83)) + 996))] * input1_shared[((((((((int)threadIdx.x) / 83) * 84) + (ff_c_outer_inner * 12)) + (rc_outer_inner * 6)) + rc_inner))]));\n            compute_local[((((nn_c_outer_inner * 14) + ff_c_outer_inner) + 35))] = (compute_local[((((nn_c_outer_inner * 14) + ff_c_outer_inner) + 35))] + (pad_temp_shared[((((((nn_c_outer_inner * 1992) + (rc_outer_inner * 498)) + (rc_inner * 83)) + (((int)threadIdx.x) % 83)) + 996))] * input1_shared[(((((((((int)threadIdx.x) / 83) * 84) + (ff_c_outer_inner * 12)) + (rc_outer_inner * 6)) + rc_inner) + 252))]));\n          }\n        }\n      }\n    }\n  }\n  for (int nn_inner = 0; nn_inner < 4; ++nn_inner) {\n    for (int ff_inner = 0; ff_inner < 7; ++ff_inner) {\n      compute[((((((((((int)blockIdx.x) / 83) * 1157352) + (nn_inner * 289338)) + ((((int)threadIdx.x) / 83) * 48223)) + (ff_inner * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)))] = compute_local[(((nn_inner * 7) + ff_inner))];\n      compute[(((((((((((int)blockIdx.x) / 83) * 1157352) + (nn_inner * 289338)) + ((((int)threadIdx.x) / 83) * 48223)) + (ff_inner * 6889)) + ((((int)blockIdx.x) % 83) * 83)) + (((int)threadIdx.x) % 83)) + 144669))] = compute_local[((((nn_inner * 7) + ff_inner) + 28))];\n    }\n  }\n}\n", "gridDim": [2656, 1, 1], "blockDim": [249, 1, 1]}