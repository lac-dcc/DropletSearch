{"parameters": {"input_shape": [128, 256, 56, 56], "filter_shape": [64, 256, 1, 1], "output_shape": [128, 64, 56, 56], "window_movement_strides": [1, 1], "padding_below_diff": [0, 0], "window_dilation_strides": [1, 1]}, "op_type": "Fused_Convolution_Add_Relu", "tvm_func_name": "ansor_conv2d_128_256_56_56_64_1_1_1_SAME_add_relu", "code": "extern \"C\" __global__ void ansor_conv2d_128_256_56_56_64_1_1_1_SAME_add_relu(float* __restrict__ input0, float* __restrict__ input1, float* __restrict__ compute, float* __restrict__ input2) {\n  float compute1[32];\n  __shared__ float pad_temp_shared[448];\n  __shared__ float input1_shared[512];\n  compute1[(0)] = 0.000000e+00f;\n  compute1[(16)] = 0.000000e+00f;\n  compute1[(1)] = 0.000000e+00f;\n  compute1[(17)] = 0.000000e+00f;\n  compute1[(2)] = 0.000000e+00f;\n  compute1[(18)] = 0.000000e+00f;\n  compute1[(3)] = 0.000000e+00f;\n  compute1[(19)] = 0.000000e+00f;\n  compute1[(8)] = 0.000000e+00f;\n  compute1[(24)] = 0.000000e+00f;\n  compute1[(9)] = 0.000000e+00f;\n  compute1[(25)] = 0.000000e+00f;\n  compute1[(10)] = 0.000000e+00f;\n  compute1[(26)] = 0.000000e+00f;\n  compute1[(11)] = 0.000000e+00f;\n  compute1[(27)] = 0.000000e+00f;\n  compute1[(4)] = 0.000000e+00f;\n  compute1[(20)] = 0.000000e+00f;\n  compute1[(5)] = 0.000000e+00f;\n  compute1[(21)] = 0.000000e+00f;\n  compute1[(6)] = 0.000000e+00f;\n  compute1[(22)] = 0.000000e+00f;\n  compute1[(7)] = 0.000000e+00f;\n  compute1[(23)] = 0.000000e+00f;\n  compute1[(12)] = 0.000000e+00f;\n  compute1[(28)] = 0.000000e+00f;\n  compute1[(13)] = 0.000000e+00f;\n  compute1[(29)] = 0.000000e+00f;\n  compute1[(14)] = 0.000000e+00f;\n  compute1[(30)] = 0.000000e+00f;\n  compute1[(15)] = 0.000000e+00f;\n  compute1[(31)] = 0.000000e+00f;\n  for (int rc_outer_outer = 0; rc_outer_outer < 32; ++rc_outer_outer) {\n    __syncthreads();\n    pad_temp_shared[(((int)threadIdx.x))] = input0[(((((((((((int)blockIdx.x) / 112) * 1605632) + (rc_outer_outer * 25088)) + ((((int)threadIdx.x) / 28) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))];\n    pad_temp_shared[((((int)threadIdx.x) + 112))] = input0[((((((((((((int)blockIdx.x) / 112) * 1605632) + (rc_outer_outer * 25088)) + ((((int)threadIdx.x) / 28) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 12544))];\n    pad_temp_shared[((((int)threadIdx.x) + 224))] = input0[((((((((((((int)blockIdx.x) / 112) * 1605632) + (rc_outer_outer * 25088)) + ((((int)threadIdx.x) / 28) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 802816))];\n    pad_temp_shared[((((int)threadIdx.x) + 336))] = input0[((((((((((((int)blockIdx.x) / 112) * 1605632) + (((((int)threadIdx.x) + 336) / 224) * 802816)) + (rc_outer_outer * 25088)) + (((((int)threadIdx.x) / 28) + 4) * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))];\n    input1_shared[(((int)threadIdx.x))] = input1[(((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)))];\n    input1_shared[((((int)threadIdx.x) + 112))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 3584))];\n    input1_shared[((((int)threadIdx.x) + 224))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 7168))];\n    input1_shared[((((int)threadIdx.x) + 336))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 10752))];\n    if (((int)threadIdx.x) < 64) {\n      input1_shared[((((int)threadIdx.x) + 448))] = input1[((((((((int)threadIdx.x) >> 3) * 256) + (rc_outer_outer * 8)) + (((int)threadIdx.x) & 7)) + 14336))];\n    }\n    __syncthreads();\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[(((((int)threadIdx.x) / 28) * 64))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 256))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 8))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 264))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 16))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 272))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 24))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 280))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[(((((int)threadIdx.x) / 28) * 64))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 256))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 8))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 264))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 16))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 272))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 24))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 280))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 32))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 288))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 40))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 296))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 48))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 304))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 56))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[((((int)threadIdx.x) % 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 312))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 32))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 288))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 40))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 296))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 48))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 304))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 56))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 224))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 312))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 1))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 257))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 9))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 265))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 17))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 273))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 25))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 281))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 1))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 257))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 9))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 265))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 17))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 273))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 25))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 281))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 33))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 289))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 41))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 297))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 49))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 305))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 57))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 28))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 313))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 33))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 289))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 41))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 297))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 49))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 305))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 57))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 252))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 313))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 2))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 258))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 10))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 266))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 18))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 274))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 26))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 282))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 2))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 258))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 10))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 266))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 18))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 274))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 26))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 282))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 34))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 290))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 42))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 298))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 50))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 306))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 58))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 56))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 314))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 34))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 290))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 42))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 298))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 50))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 306))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 58))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 280))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 314))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 3))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 259))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 11))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 267))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 19))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 275))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 27))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 283))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 3))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 259))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 11))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 267))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 19))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 275))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 27))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 283))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 35))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 291))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 43))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 299))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 51))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 307))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 59))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 84))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 315))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 35))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 291))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 43))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 299))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 51))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 307))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 59))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 308))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 315))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 4))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 260))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 12))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 268))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 20))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 276))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 28))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 284))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 4))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 260))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 12))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 268))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 20))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 276))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 28))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 284))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 36))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 292))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 44))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 300))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 52))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 308))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 60))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 112))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 316))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 36))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 292))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 44))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 300))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 52))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 308))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 60))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 336))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 316))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 5))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 261))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 13))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 269))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 21))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 277))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 29))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 285))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 5))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 261))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 13))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 269))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 21))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 277))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 29))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 285))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 37))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 293))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 45))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 301))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 53))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 309))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 61))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 140))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 317))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 37))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 293))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 45))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 301))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 53))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 309))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 61))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 364))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 317))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 6))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 262))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 14))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 270))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 22))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 278))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 30))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 286))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 6))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 262))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 14))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 270))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 22))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 278))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 30))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 286))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 38))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 294))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 46))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 302))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 54))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 310))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 62))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 168))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 318))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 38))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 294))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 46))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 302))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 54))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 310))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 62))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 392))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 318))]));\n    compute1[(0)] = (compute1[(0)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 7))]));\n    compute1[(16)] = (compute1[(16)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 263))]));\n    compute1[(1)] = (compute1[(1)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 15))]));\n    compute1[(17)] = (compute1[(17)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 271))]));\n    compute1[(2)] = (compute1[(2)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 23))]));\n    compute1[(18)] = (compute1[(18)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 279))]));\n    compute1[(3)] = (compute1[(3)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 31))]));\n    compute1[(19)] = (compute1[(19)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 287))]));\n    compute1[(8)] = (compute1[(8)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 7))]));\n    compute1[(24)] = (compute1[(24)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 263))]));\n    compute1[(9)] = (compute1[(9)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 15))]));\n    compute1[(25)] = (compute1[(25)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 271))]));\n    compute1[(10)] = (compute1[(10)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 23))]));\n    compute1[(26)] = (compute1[(26)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 279))]));\n    compute1[(11)] = (compute1[(11)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 31))]));\n    compute1[(27)] = (compute1[(27)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 287))]));\n    compute1[(4)] = (compute1[(4)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 39))]));\n    compute1[(20)] = (compute1[(20)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 295))]));\n    compute1[(5)] = (compute1[(5)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 47))]));\n    compute1[(21)] = (compute1[(21)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 303))]));\n    compute1[(6)] = (compute1[(6)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 55))]));\n    compute1[(22)] = (compute1[(22)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 311))]));\n    compute1[(7)] = (compute1[(7)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 63))]));\n    compute1[(23)] = (compute1[(23)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 196))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 319))]));\n    compute1[(12)] = (compute1[(12)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 39))]));\n    compute1[(28)] = (compute1[(28)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 295))]));\n    compute1[(13)] = (compute1[(13)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 47))]));\n    compute1[(29)] = (compute1[(29)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 303))]));\n    compute1[(14)] = (compute1[(14)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 55))]));\n    compute1[(30)] = (compute1[(30)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 311))]));\n    compute1[(15)] = (compute1[(15)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 63))]));\n    compute1[(31)] = (compute1[(31)] + (pad_temp_shared[(((((int)threadIdx.x) % 28) + 420))] * input1_shared[((((((int)threadIdx.x) / 28) * 64) + 319))]));\n  }\n  for (int i0_inner = 0; i0_inner < 2; ++i0_inner) {\n    for (int i1_inner = 0; i1_inner < 8; ++i1_inner) {\n      compute[((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))] = max((compute1[(((i0_inner * 8) + i1_inner))] + input2[((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)))]), 0.000000e+00f);\n      compute[(((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 100352))] = max((compute1[((((i0_inner * 8) + i1_inner) + 16))] + input2[(((((((((((((int)blockIdx.x) / 112) * 401408) + (i0_inner * 200704)) + ((((int)threadIdx.x) / 28) * 25088)) + (i1_inner * 3136)) + (((((int)blockIdx.x) % 112) / 14) * 392)) + (((((int)threadIdx.x) % 28) >> 2) * 56)) + ((((int)blockIdx.x) % 14) * 4)) + (((int)threadIdx.x) & 3)) + 100352))]), 0.000000e+00f);\n    }\n  }\n}\n", "gridDim": [7168, 1, 1], "blockDim": [112, 1, 1]}